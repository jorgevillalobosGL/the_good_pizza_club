{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-23456cf193dad8b94f0130c1c2d97616",
            "file": "src/app/store/app.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, Action, createFeatureSelector, on, createSelector } from '@ngrx/store';\nimport * as AppActions from './app.actions';\n\nexport interface AppState {\n  myState: string;\n};\n\nconst initialState: AppState = {\n  myState: ''\n};\n\nconst appReducer = createReducer(\n  initialState,\n  on(AppActions.myAction, (state, {payload}) => ({\n    ...state,\n    myState: payload\n  }))\n);\n\nexport  function  reducer(state: AppState | undefined, action: Action) {\n  return appReducer(state, action);\n}\n\n// Selectors\nexport const selectAppState = createFeatureSelector<AppState>('app');\nexport const selectMyState = createSelector(\n  selectAppState,\n  (state: AppState) => state.myState\n);\n",
            "properties": [
                {
                    "name": "myState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "AuthState",
            "id": "interface-AuthState-069bc41950ac2d611733dc5fe1a63708",
            "file": "src/app/auth/store/auth.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, Action, createFeatureSelector, on, createSelector } from '@ngrx/store';\nimport { User } from '@app-shared/general.model';\nimport * as AuthActions from './auth.actions';\n\nexport interface AuthState {\n  user: User | null;\n};\n\nconst initialState: AuthState = {\n  user: null\n};\n\nconst authReducer = createReducer(\n  initialState,\n  on(AuthActions.authorizeUser, (state, {payload}) => ({\n    ...state,\n    user: payload\n  }))\n);\n\nexport  function  reducer(state: AuthState | undefined, action: Action) {\n  return authReducer(state, action);\n}\n\n// Selectors\nexport const selectAuthState = createFeatureSelector<AuthState>('auth');\nexport const selectUser = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.user\n);\n",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "DropdownValue",
            "id": "interface-DropdownValue-a9f30b537bdf16afa3d7c126e22cf7d2",
            "file": "src/app/shared/general.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DropdownValue {\n  value: string | number;\n  text?: string;\n  disabled?: boolean;\n}\n\nexport interface MenuItem {\n  name: string;\n  url: string;\n  icon?: string;\n}\n\nexport interface User {\n  name: string;\n  email: string;\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "MenuItem",
            "id": "interface-MenuItem-a9f30b537bdf16afa3d7c126e22cf7d2",
            "file": "src/app/shared/general.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DropdownValue {\n  value: string | number;\n  text?: string;\n  disabled?: boolean;\n}\n\nexport interface MenuItem {\n  name: string;\n  url: string;\n  icon?: string;\n}\n\nexport interface User {\n  name: string;\n  email: string;\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-a9f30b537bdf16afa3d7c126e22cf7d2",
            "file": "src/app/shared/general.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DropdownValue {\n  value: string | number;\n  text?: string;\n  disabled?: boolean;\n}\n\nexport interface MenuItem {\n  name: string;\n  url: string;\n  icon?: string;\n}\n\nexport interface User {\n  name: string;\n  email: string;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-7050fe9804d45a29496685541eaf0137",
            "file": "src/app/services/auth.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createUser",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<firebase.auth.UserCredential>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "facebookSignIn",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<firebase.auth.UserCredential>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "googleSignIn",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<firebase.auth.UserCredential>",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initUserStateListener",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<firebase.User | null>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isUserAuth",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<firebase.auth.UserCredential>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport firebase from 'firebase/compat/app';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable()\nexport class AuthService {\n\n  public initUserStateListener(): Observable<firebase.User | null> {\n    return from(this.firebaseAuth.authState);\n  }\n\n  public isUserAuth(): Observable<boolean> {\n    return this.initUserStateListener().pipe(\n      map((user) => {\n        return !!user;\n      })\n    );\n  }\n\n  public createUser(email: string, password: string, name: string): Observable<firebase.auth.UserCredential> {\n    return from(this.firebaseAuth.createUserWithEmailAndPassword(email, password)).pipe(\n      tap((response) => {\n        response?.user?.updateProfile({\n          displayName: name\n        });\n      }),\n      catchError((error) => {\n        this.toastr.error(error.message.replace('Firebase:', ''), 'Error');\n        return EMPTY;\n      })\n    );\n  }\n\n  public login(email: string, password: string): Observable<firebase.auth.UserCredential> {\n    return from(this.firebaseAuth.signInWithEmailAndPassword(email, password)).pipe(\n      catchError((error) => {\n        this.toastr.error(error.message.replace('Firebase:', ''), 'Error');\n        return EMPTY;\n      })\n    );\n  }\n\n  public googleSignIn(): Observable<firebase.auth.UserCredential> {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return from(this.firebaseAuth.signInWithPopup(provider)).pipe(\n      catchError((error) => {\n        this.toastr.error(error.message.replace('Firebase:', ''), 'Error');\n        return EMPTY;\n      })\n    );\n  }\n\n  public facebookSignIn(): Observable<firebase.auth.UserCredential> {\n    const provider = new firebase.auth.FacebookAuthProvider();\n    return from(this.firebaseAuth.signInWithPopup(provider)).pipe(\n      catchError((error) => {\n        this.toastr.error(error.message.replace('Firebase:', ''), 'Error');\n        return EMPTY;\n      })\n    );\n  }\n\n  constructor(\n    private toastr: ToastrService,\n    private firebaseAuth: AngularFireAuth\n  ) { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "firebaseAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "firebaseAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-af6c22bd6e1863ef7211d6d186718582",
            "file": "src/app/guards/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanLoad, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '@app-services/auth.service';\n\nconst NOT_AUTHORIZATION_MESSAGE = 'You are not authorized to view this page, please log in first';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanLoad {\n  canLoad(): Observable<boolean> {\n    return this.authService.isUserAuth().pipe(\n      tap((isAuth) => {\n        if (!isAuth) {\n          this.toastr.error(NOT_AUTHORIZATION_MESSAGE);\n          this.router.navigate(['/auth']);\n        }\n      })\n    );\n  }\n\n  constructor(\n    private toastr: ToastrService,\n    private router: Router,\n    private authService: AuthService\n  ) { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AddressCreditCardComponent",
            "id": "component-AddressCreditCardComponent-b8b955b8e0ff34c28cb2cd710817014b",
            "file": "src/app/shared/stories/address-credit-card/address-credit-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-address-credit-card",
            "styleUrls": [
                "./address-credit-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./address-credit-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "content2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "creditCardBrand",
                    "defaultValue": "CreditCardBrand.MasterCard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "CreditCardBrand"
                },
                {
                    "name": "isDefault",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "state",
                    "defaultValue": "CardStates.NEW",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "CardStates"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "CardTypes"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                },
                {
                    "name": "onDefaultClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum CardTypes {\n  'Address' = 'address',\n  'Credit' = 'credit'\n};\n\nexport enum CardStates {\n  'NEW' = 'NEW',\n  'EDIT' = 'EDIT',\n  'DELETE' = 'DELETE'\n};\n\nexport enum CreditCardBrand {\n  'MasterCard' = 'mastercard',\n  'Visa' = 'visa'\n};\n\n@Component({\n  selector: 'sb-address-credit-card',\n  templateUrl: './address-credit-card.component.html',\n  styleUrls: ['./address-credit-card.component.scss']\n})\nexport default class AddressCreditCardComponent {\n  @Input() title: string;\n  @Input() content1: string;\n  @Input() content2: string;\n  @Input() isDefault: boolean = false;\n  @Input() type: CardTypes;\n  @Input() state: CardStates = CardStates.NEW;\n  @Input() creditCardBrand: CreditCardBrand = CreditCardBrand.MasterCard;\n\n  @Output() onClick = new EventEmitter<Event>();\n  @Output() onDefaultClick = new EventEmitter<Event>();\n\n  public get footerText() : string {\n    let text;\n    if(this.type === CardTypes.Address) {\n      text = this.isDefault ? 'Default address' : 'Make Favorite';\n      text = this.state === CardStates.NEW ? 'Add new address' : text;\n    } else {\n      text = this.isDefault ? 'Using this card' : 'Use this card';\n      text = this.state === CardStates.NEW ? 'Add payment method' : text;\n    }\n    return text;\n  }\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/scss/colors';\n\n.address-credit-card {\n  width: 350px;\n  display: flex;\n  min-height: 82px;\n  background: $gray-1;\n  border-radius: 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 20px 0px 20px 20px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15);\n\n  .credit-card-logo {\n    top: 10px;\n    right: -30px;\n    position: absolute;\n  }\n\n  .card-content {\n    color: $white;\n    font-size: 16px;\n    margin-right: 22%;\n    line-height: 21px;\n    font-style: normal;\n    font-weight: normal;\n    font-family: 'Red Hat Display';\n  }\n\n  .card-footer {\n    &-text {\n      color: $gray-3;\n      max-width: 165px;\n      vertical-align: middle;\n    }\n\n    .icon {\n      top: 5px;\n      right: -10px;\n      color: $gray-3;\n      cursor: pointer;\n      position: absolute;\n    }\n  }\n}",
                    "styleUrl": "./address-credit-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 46
            },
            "accessors": {
                "footerText": {
                    "name": "footerText",
                    "getSignature": {
                        "name": "footerText",
                        "type": "string",
                        "returnType": "string",
                        "line": 36
                    }
                }
            },
            "templateData": "<div class=\"address-credit-card\">\n  <div *ngIf=\"state !== 'NEW'\" class=\"card-content position-relative\">\n    <img class=\"credit-card-logo\" *ngIf=\"type === 'credit'\" src=\"assets/images/{{creditCardBrand}}.svg\">\n    <h4 class=\"title txt-white\">{{title}}</h4>\n    <p class=\"card-content\">{{content1}}</p>\n    <p class=\"card-content\">{{content2}}</p>\n  </div>\n  <div class=\"card-footer p-0 row align-items-center\">\n    <sb-icon-button class=\"col-auto\"[isOutline]=\"true\" [label]=\"state\" (click)=\"onClick.emit($event)\"></sb-icon-button>\n    <div class=\"position-relative col-auto row\">\n      <label class=\"card-footer-text text-truncate\" [ngClass]=\"{'txt-gray-6': isDefault || state === 'NEW'}\">{{footerText}}</label>\n      <li *ngIf=\"state !== 'NEW'\" class=\"icon icon-start\" (click)=\"onDefaultClick.emit($event)\" [ngClass]=\"{'txt-yellow': isDefault}\"></li>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f65ec1faa1163e34219601567d0e2066",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activePathUrl$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "activePathUrlSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initUserStateListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setMenuItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { distinctUntilChanged, filter, map, pluck } from 'rxjs/operators';\n\nimport { MenuItem } from '@app-shared/general.model';\nimport { AuthService } from '@app-services/auth.service';\n\nimport { AuthState } from '@app-auth/store/auth.reducer';\nimport { Store } from '@ngrx/store';\nimport * as AuthActions from '@app-auth/store/auth.actions';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  public activePathUrl$: Observable<any>;\n  public menuItems: MenuItem[];\n\n  public activePathUrlSubscription() {\n    this.activePathUrl$ = this.router.events.pipe(\n      filter((route: any) => !!route.url),\n      pluck('url'),\n      distinctUntilChanged(),\n      map<string, string>(url => `/${url?.split('/')[1]}`),\n    );\n  }\n\n  public setMenuItems() {\n    this.menuItems = [\n      {\n        name: 'Menu',\n        url: 'home',\n      },\n      {\n        name: 'About Us',\n        url: 'about-us',\n      },\n      {\n        name: 'Contact',\n        url: '/contact',\n      },\n      {\n        name: 'Login / Sign up',\n        url: '/auth',\n      },\n      {\n        name: 'Help',\n        url: '/help',\n      },\n      {\n        name: '',\n        url: '/shopping',\n        icon: 'icon-shopping',\n      },\n    ];\n  }\n\n  ngOnInit(): void {\n    this.setMenuItems();\n    this.activePathUrlSubscription();\n    this.initUserStateListener();\n  }\n  private initUserStateListener(): void {\n    this.authService.initUserStateListener().subscribe(\n      user => {\n        if (!!user) {\n          this.authStore.dispatch(\n            AuthActions.authorizeUser({\n              payload: {\n                name: user?.displayName || '',\n                email: user?.email || '',\n              }\n            })\n          );\n        }\n      }\n    );\n  }\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private authStore: Store<AuthState>\n  ) { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main-nav {\n  display: flex;\n  z-index: 100;\n\n  .logo {\n    top: 42px;\n    left: 102px;\n    position: absolute;\n  }\n\n  .menu-container {\n    top: 62px;\n    width: 56%;\n    right: 132px;\n    position: absolute;\n  }\n}\n\n@media (max-width: 991.98px) {\n  .main-nav .logo {\n    display: none;\n  }\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authStore",
                        "type": "Store<AuthState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 80,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authStore",
                        "type": "Store<AuthState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main-nav position-relative\">\n  <img class=\"logo\" src=\"assets/images/Logo.svg\" width=\"121px\" height=\"121px\">\n  <div class=\"menu-container\">\n    <sb-header [menuItems]=\"menuItems\" [linkActive]=\"activePathUrl$ | async\"></sb-header>\n  </div>\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n"
        },
        {
            "name": "AuthComponent",
            "id": "component-AuthComponent-f344f66fa953c3e281396fa90c2b6e75",
            "file": "src/app/auth/auth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth",
            "styleUrls": [
                "./auth.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./auth.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent {\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"~bootstrap/scss/_functions.scss\";\n@import \"~bootstrap/scss/_variables.scss\";\n@import \"~bootstrap/scss/mixins/_breakpoints.scss\";\n\n.auth-main-container {\n  position: relative;\n  .comp-container {\n    padding: 219px 110px 0 15%;\n  }\n}\n\n@include media-breakpoint-down(lg) {\n  .auth-main-container {\n    position: absolute;\n  }\n  .img-container {\n     min-height: 75em;\n  }\n}\n\n@include media-breakpoint-down(sm) {\n  .auth-main-container .comp-container {\n    left: 0;\n  }\n}",
                    "styleUrl": "./auth.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div class=\"d-flex\">\n  <div class=\"img-container\">\n    <img src=\"/assets/images/welcome_main.png\" alt=\"main-welcome\" class=\"logo\">\n  </div>\n  <div class=\"auth-main-container w-100\">\n    <div class=\"comp-container\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-21698c41ee19ae4928dfdc8ec8dd523e",
            "file": "src/app/shared/stories/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-button",
            "styleUrls": [
                "./button.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasShadow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "isOutline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"primary\" | \"secondary\" | \"success\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'sb-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.scss'],\n})\nexport default class ButtonComponent {\n  @Input() type?: 'primary' | 'secondary' | 'success' = 'primary';\n  @Input() label = 'Button';\n  @Input() isOutline = false;\n  @Input() hasShadow = false;\n  @Input() isDisabled = false;\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const btnType = !this.isDisabled? this.type : 'light';\n    const classes = ['btn', `btn-${this.isOutline? 'outline-' : ''}${btnType}`];\n    if (this.hasShadow) {\n      classes.push('btn-shadow');\n    }\n    return classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/scss/colors';\n\n.btn {\n  color: red;\n  top: 20px;\n  left: 20px;\n  padding: 15.5px 41.5px;\n  font-size: 30px;\n  line-height: 37px;\n  text-align: center;\n  font-style: normal;\n  align-items: center;\n  font-family: Rowdies;\n  border-radius: 200px;\n  justify-content: center;\n  &-primary,\n  &-secondary {\n    color: $gray-6;\n  }\n  &-light {\n    opacity: 1;\n    color: $gray-4;\n  }\n  &-shadow {\n    box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.25);\n  }\n}\n",
                    "styleUrl": "./button.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 17
                    }
                }
            },
            "templateData": "<button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\" [disabled]=\"isDisabled\">\n    {{ label }}\n</button>"
        },
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-ff8a8499cb1d4d09c992a666a0e357c9",
            "file": "src/app/shared/stories/chip/chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-chip",
            "styleUrls": [
                "./chip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"primary\" | \"secondary\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sb-chip',\n  templateUrl: './chip.component.html',\n  styleUrls: ['./chip.component.scss']\n})\nexport default class ChipComponent {\n  @Input() label = 'text';\n  @Input() type?: 'primary' | 'secondary' = 'primary';\n  @Output() onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const classes = ['badge', `badge-${this.type}`];\n    return classes;\n  }\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/scss/colors';\n\n.badge {\n  color: $white;\n  font-size: 16px;\n  font-weight: 400;\n  padding: 8px 18px;\n  line-height: 21px;\n  font-style: normal;\n  text-align: center;\n  align-items: center;\n  border-radius: 20px;\n  letter-spacing: 0em;\n  justify-content: center;\n  font-family: 'Red Hat Display';\n\n  &-primary {\n    background-color: $green-2;\n  }\n\n  &-secondary {\n    background-color: $gray-2;\n  }\n\n  .icon {\n    color: $white;\n    cursor: pointer;\n    font-size: 10px;\n    display: contents;\n    &::before {\n      margin-left: 15px;\n    }\n  }\n}",
                    "styleUrl": "./chip.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 13
                    }
                }
            },
            "templateData": "<span [ngClass]=\"classes\">\n  {{ label }}\n  <li class=\"icon icon-x\" (click)=\"onClick.emit($event)\"></li>\n</span>"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-494111a5c81ccbc849f613ca5fdd8567",
            "file": "src/app/shared/stories/dropdown/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-dropdown",
            "styleUrls": [
                "./dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dropdownValues",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "DropdownValue[]"
                },
                {
                    "name": "label",
                    "defaultValue": "'Select an Item'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "itemSelected",
                    "defaultValue": "new EventEmitter<DropdownValue>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onItemClick",
                    "args": [
                        {
                            "name": "value",
                            "type": "DropdownValue",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "DropdownValue",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DropdownValue } from '@app-shared/general.model';\n\n@Component({\n  selector: 'sb-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport default class DropdownComponent {\n  @Input() dropdownValues: DropdownValue[] = [];\n  @Input() label = 'Select an Item';\n  @Output() itemSelected = new EventEmitter<DropdownValue>();\n  onItemClick(value: DropdownValue) {\n    this.itemSelected.emit(value);\n  }\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/scss/colors';\n\n.dropdown {\n\t&.show {\n\t\t.dropdown-toggle {\n\t\t\t&::before {\n\t\t\t\tpadding-left: 0px;\n\t\t\t\tpadding-right: 10px;\n\t\t\t\ttransform: rotate(180deg);\n\t\t\t}\n\t\t}\n\t}\n}\n.dropdown-toggle {\n\tcolor: $white;\n\tpadding: 25px;\n\tfont-size: 20px;\n\tmin-width: 230px;\n\tmargin-left: 5px;\n\tline-height: 26px;\n\tbackground: $gray-2;\n\tborder-radius: 10px;\n\tfont-style: normal;\n\tfont-weight: normal;\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\tfont-family: 'Red Hat Display';\n\tbox-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15);\n\t&::after {\n\t\tdisplay: none;\n\t}\n\t&::before {\n\t\tfloat: right;\n\t\tfont-size: 30px;\n\t\tpadding-left: 10px;\n\t}\n}\n.dropdown-menu {\n\tmargin: 0px;\n\tmin-width: 230px;\n\tbackground: $gray-2;\n\ttop: -10px !important;\n\t.dropdown-item {\n\t\tcolor: $white;\n\t\tfont-size: 20px;\n\t\tline-height: 26px;\n\t\tfont-style: normal;\n\t\tfont-weight: normal;\n\t\tfont-family: 'Red Hat Display';\n\t\t&.disabled {\n\t\t\tcolor: $gray-3;\n\t\t}\n\t\t&:hover {\n\t\t\tborder-radius: 50px;\n\t\t\ttext-decoration: none;\n\t\t\tbackground-color: $green-2;\n\t\t}\n\t}\n}\n",
                    "styleUrl": "./dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "templateData": "<li class=\"dropdown\">\n  <a class=\"dropdown-toggle icon-menu-arrow\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n    aria-expanded=\"false\">{{label}}</a>\n  <div class=\"dropdown-menu\">\n    <a \n      *ngFor=\"let dropdownValue of dropdownValues\"\n      [ngClass]=\"{'disabled': dropdownValue.disabled}\"\n      (click)=\"onItemClick(dropdownValue)\"\n      class=\"dropdown-item\">\n      {{dropdownValue.text || dropdownValue.value}}\n    </a> \n  </div>\n</li>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-4ad3c70049732befc53deb962bbe9115",
            "file": "src/app/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n\n  constructor() { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/scss/colors';\n@import \"~bootstrap/scss/_functions.scss\";\n@import \"~bootstrap/scss/_variables.scss\";\n@import \"~bootstrap/scss/mixins/_breakpoints.scss\";\n\n.footer {\n  height: 451px;\n  background-color: $orange;\n  border-radius: 0px 340px 0px 0px/0px 285px 0px 0px;\n  position: relative;\n\n  &-content {\n    top: 101px;\n    position: absolute;\n\n    .our-info {\n      padding: 0 3% 0 9%;\n\n      .media-icons {\n        width: 83%;\n        padding-top: 20px;\n\n        .icon {\n          padding: 0px;\n          color: $gray-1;\n          font-size: 35px;\n        }\n      }\n    }\n\n    .our-feed {\n      max-width: 22%;\n      padding-right: 15px;\n    }\n\n    .list-group li {\n      list-style-type: none;\n\n      a {\n        color: $gray-1;\n      }\n    }\n  }\n}\n\n@include media-breakpoint-down(md) {\n  .footer {\n    height: auto;\n    &-content {\n      background-color: $orange;\n      padding: 0px 15px;\n    }\n\n    .our-info .logo {\n      display: block;\n      margin: 15px auto;\n    }\n\n    .our-links, .our-feed {\n      padding: inherit;\n    }\n  }\n}",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<footer class=\"footer\">\n  <div class=\"row footer-content\">\n    <div class=\"our-info col-md-4 col-12\">\n      <img class=\"logo\" src=\"assets/images/Logo.svg\" width=\"101px\" height=\"101px\">\n      <p class=\"txt-gray-1 pt-4\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla nec scelerisque vulputate est iaculis bibendum\n        curabitur.</p>\n        <div class=\"row media-icons mx-1\">\n          <li class=\"icon col cursor-pointer icon-facebook\"></li>\n          <li class=\"icon col cursor-pointer icon-twitter\"></li>\n          <li class=\"icon col cursor-pointer icon-linkedin\"></li>\n          <li class=\"icon col cursor-pointer icon-youtube\"></li>\n          <li class=\"icon col cursor-pointer icon-instagram\"></li>\n        </div>\n    </div>\n    <div class=\"our-links txt-white col-12 col-md-2 mt-5\">\n      <h4>Our Links</h4>\n      <ul class=\"list-group pt-4\">\n        <li class=\"pb-3\"><a href=\"\">Menu</a></li>\n        <li class=\"pb-3\"><a href=\"\">Contact</a></li>\n        <li class=\"pb-3\"><a href=\"\">About us</a></li>\n        <li class=\"pb-3\"><a href=\"\">Help</a></li>\n      </ul>\n    </div>\n    <div class=\"stuff txt-white col-12 col-md-3 mt-5\">\n      <h4>Important stuff!</h4>\n      <ul class=\"list-group pt-4\">\n        <li class=\"pb-3\"><a href=\"\">Terms & Conditions</a></li>\n        <li class=\"pb-3\"><a href=\"\">Privacy Policy</a></li>\n        <li class=\"pb-3\"><a href=\"\">Careers</a></li>\n      </ul>\n    </div>\n    <div class=\"our-feed txt-white col-12 col-md-3 mt-5\">\n      <h4>Our Feed</h4>\n      <div class=\"d-flex flex-wrap\">\n        <img src=\"assets/images/ourfeed_1.png\" class=\"m-1\" width=\"68px\" height=\"68px\">\n        <img src=\"assets/images/ourfeed_2.png\" class=\"m-1\" width=\"68px\" height=\"68px\">\n        <img src=\"assets/images/ourfeed_3.png\" class=\"m-1\" width=\"68px\" height=\"68px\">\n        <img src=\"assets/images/ourfeed_4.png\" class=\"m-1\" width=\"68px\" height=\"68px\">\n        <img src=\"assets/images/ourfeed_5.png\" class=\"m-1\" width=\"68px\" height=\"68px\">\n        <img src=\"assets/images/ourfeed_6.png\" class=\"m-1\" width=\"68px\" height=\"68px\">\n      </div>\n    </div>\n  </div>\n</footer>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-39057177d1e60cbd2f681cc529b47b28",
            "file": "src/app/shared/stories/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-header",
            "styleUrls": [
                "./header.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "linkActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "MenuItem[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "redirectTo",
                    "args": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MenuItem } from '@app-shared/general.model';\n\n@Component({\n  selector: 'sb-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.scss'],\n})\nexport default class HeaderComponent {\n  @Input() menuItems: MenuItem[];\n  @Input() linkActive: string;\n\n  redirectTo(link: string) {\n    this.router.navigate([link]);\n  }\n\n  constructor(\n    private router: Router,\n  ) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/scss/colors';\n\n.nav {\n  a {\n    order: 0;\n    margin: 0px;\n    padding: 0px;\n    font-size: 24px;\n    font-weight: 300;\n    position: static;\n    line-height: 30px;\n    font-style: normal;\n    text-align: center;\n    font-family: Rowdies;\n\n    &.nav-link.active, &.nav-link:hover {\n      color: $yellow;\n    }\n  }\n\n  .nav-link,\n  .icon {\n    color: $gray-6;\n\n    &.active,\n    &:hover {\n      color: $gray-4;\n    }\n  }\n\n}\n\n.mobile-menu {\n  display: none;\n\n  .bg-dark .nav-link, .icon {\n    font-style: normal;\n    font-family: Rowdies;\n    font-size: 24px;\n    color: $gray-6;\n    &.active{\n      color: $yellow;\n    }\n  }\n}\n\n@media (max-width: 991.98px) {\n  .mobile-menu {\n    display: block;\n  }\n\n  .nav {\n    display: none !important;\n  }\n}\n",
                    "styleUrl": "./header.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<header>\n  <nav class=\"desktop-menu nav d-flex justify-content-between\">\n    <a *ngFor=\"let menuItem of menuItems\" class=\"nav-link cursor-pointer\" [ngClass]=\"{'active': linkActive === menuItem?.url}\"\n      (click)=\"redirectTo(menuItem.url)\">\n      {{ menuItem.name }} <span *ngIf=\"menuItem.icon\" class=\"icon\" [ngClass]=\"menuItem.icon\"></span>\n    </a>\n  </nav>\n  <div class=\"fixed-top mobile-menu\">\n    <nav class=\"navbar navbar-dark bg-dark\">\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggleExternalContent\"\n        aria-controls=\"navbarToggleExternalContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n    </nav>\n    <div class=\"mob-menu collapse\" id=\"navbarToggleExternalContent\">\n      <div class=\"bg-dark p-4\">\n        <a *ngFor=\"let menuItem of menuItems\" class=\"nav-link\" [ngClass]=\"{'active': linkActive === menuItem?.url}\"\n          [href]=\"menuItem.url\">\n          {{ menuItem.name }} <span *ngIf=\"menuItem.icon\" class=\"icon\" [ngClass]=\"menuItem.icon\"></span>\n        </a>\n      </div>\n    </div>\n  </div>\n</header>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-b412a4644af8bf760458899b6e5e5ea6",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  constructor() { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div class=\"home-main-container txt-white pt-5\">\n  home works!\n</div>\n\n"
        },
        {
            "name": "IconButtonComponent",
            "id": "component-IconButtonComponent-af9d022addcc6b33aa59047589e87ecd",
            "file": "src/app/shared/stories/icon-button/icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-icon-button",
            "styleUrls": [
                "./icon-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasShadow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "isOutline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "showIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"primary\" | \"secondary\" | \"success\""
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'sb-icon-button',\n  templateUrl: './icon-button.component.html',\n  styleUrls: ['./icon-button.component.scss']\n})\nexport default class IconButtonComponent {\n  @Input() type?: 'primary' | 'secondary' | 'success' = 'primary';\n  @Input() label = 'Button';\n  @Input() width: string;\n  @Input() isOutline = false;\n  @Input() hasShadow = false;\n  @Input() isDisabled = false;\n  @Input() showIcon = false;\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const btnType = !this.isDisabled? this.type : 'light';\n    const classes = ['btn', `btn-${this.isOutline? 'outline-' : ''}${btnType}`];\n    if (this.hasShadow) {\n      classes.push('btn-shadow');\n    }\n    return classes;\n  }\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/scss/colors';\n\n.btn {\n  left: 80px;\n  padding: 15.5px 35px;\n  font-size: 20px;\n  font-weight: 400;\n  line-height: 25px;\n  text-align: center;\n  font-style: normal;\n  align-items: center;\n  font-family: Rowdies;\n  border-radius: 200px;\n  justify-content: center;\n\n  .icon {\n      top: 1px;\n      color: $yellow;\n      display: inline;\n      &::before {\n        margin-right: 8px;\n      }\n    }\n\n  &-primary,\n  &-secondary {\n    color: $gray-6;\n  }\n\n  &-outline-light, &-light {\n    opacity: 1;\n    &, .icon {\n      color: $gray-4 !important;\n    }\n  }\n\n  &-shadow {\n    box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.25);\n  }\n}\n",
                    "styleUrl": "./icon-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 19
                    }
                }
            },
            "templateData": "<button\n    type=\"button\"\n    [ngStyle]=\"{'width': width}\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\" [disabled]=\"isDisabled\">\n    <li *ngIf=\"showIcon\" class=\"icon icon-pizza\"></li>\n    {{ label }}\n</button>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-4adee701ae158646ec814a8f01bb8a04",
            "file": "src/app/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "facebookLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "googleLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "handleLogin",
                    "args": [
                        {
                            "name": "user",
                            "type": "firebase.default.User | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "firebase.default.User | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { AuthService } from '@app-services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnDestroy {\n  public loginForm: FormGroup;\n  private destroy$: Subject<boolean> = new Subject<boolean>();\n\n  public login() {\n    const { email, password } = this.loginForm.getRawValue();\n    this.authService.login(email, password).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      ({ user }) => {\n        this.handleLogin(user);\n      }\n    );\n  }\n\n  public googleLogin() {\n    this.authService.googleSignIn().subscribe(\n      ({ user }) => {\n        this.handleLogin(user);\n      }\n    );\n  }\n\n  public facebookLogin() {\n    this.authService.facebookSignIn().subscribe(\n      ({ user }) => {\n        this.handleLogin(user);\n      }\n    );\n  }\n\n  private handleLogin(user: firebase.default.User | null): void {\n    if (!!user) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private formBuilder: FormBuilder\n  ) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": " .login-section {\n   height: 875px;\n   .btn-login {\n     text-align: center;\n     padding-top: 95px;\n   }\n\n   .btn-google {\n     text-align: center;\n     padding-top: 56px;\n   }\n\n   .btn-facebook {\n     text-align: center;\n     padding-top: 27px;\n   }\n }\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy"
            ],
            "templateData": "<div class=\"login-section\">\n  <h3 class=\"txt-yellow pb-4 pl-3\">Welcome back!</h3>\n  <form [formGroup]=\"loginForm\">\n    <label class=\"txt-gray-6\">Email</label>\n    <sb-text-input type=\"email\" formControlName=\"email\"></sb-text-input>\n    <label class=\"txt-gray-6 pt-5\">Password</label>\n    <sb-text-input type=\"password\" formControlName=\"password\" [disableValidations]=\"true\"></sb-text-input>\n  </form>\n  <div class=\"\">\n    <div class=\"btn-login\"><sb-icon-button label=\"LOG IN\" type=\"success\" width=\"345px\" (click)=\"login()\"></sb-icon-button></div>\n    <div class=\"btn-google\"><sb-icon-button label=\"LOG IN WITH GOOGLE\" [isOutline]=\"true\" width=\"345px\" (click)=\"googleLogin()\"></sb-icon-button></div>\n    <div class=\"btn-facebook\"><sb-icon-button label=\"LOG IN WITH FACEBOOK\" [isOutline]=\"true\" width=\"345px\" (click)=\"facebookLogin()\"></sb-icon-button></div>\n  </div>\n</div>"
        },
        {
            "name": "PizzaMenuCardComponent",
            "id": "component-PizzaMenuCardComponent-fa7169a6b266318f1758eae925700b5f",
            "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-pizza-menu-card",
            "styleUrls": [
                "./pizza-menu-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pizza-menu-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColorGradientFrom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "bgColorGradientTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "cardBackgroundUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "numOfCalories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "numOfGrams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number"
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sb-pizza-menu-card',\n  templateUrl: './pizza-menu-card.component.html',\n  styleUrls: ['./pizza-menu-card.component.scss'],\n})\nexport default class PizzaMenuCardComponent {\n  @Input() title: string;\n  @Input() numOfGrams: number;\n  @Input() numOfCalories: number;\n  @Input() description: string;\n  @Input() price: number;\n  @Input() cardBackgroundUrl: string;\n  @Input() bgColorGradientFrom: string;\n  @Input() bgColorGradientTo: string;\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  get background() {\n    return {\n      'background-image': `url(${this.cardBackgroundUrl}),\n                           radial-gradient(187.18% 90.09% at 50% 9.91%, ${this.bgColorGradientFrom} 0%, ${this.bgColorGradientTo} 100%)`,\n    };\n  }\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/scss/colors';\n\n.pizza-card {\n  width: 308px;\n  height: 449px;\n  padding-left: 30px;\n  padding-right: 15px;\n  border-radius: 10px 100px 10px 10px;\n  background-repeat: no-repeat, repeat;\n  box-shadow: 0px 4px 16px 12px rgba(0, 0, 0, 0.14);\n\n  .content {\n    position: relative;\n    top: 50%;\n    height: 50%;\n\n    .calories {\n      margin-left: 36px;\n    }\n\n    .description {\n      color: $gray-1;\n      font-size: 16px;\n      line-height: 21px;\n      font-style: normal;\n      font-weight: normal;\n      font-family: 'Red Hat Display';\n    }\n\n    .pizza-card-footer {\n      bottom: 20px;\n      position: absolute;\n      width: -webkit-fill-available;\n\n      .price-container {\n        display: inline-grid;\n\n        .price-label {\n          margin: 0;\n          color: $gray-1;\n          font-size: 12px;\n          font-weight: 300;\n          line-height: 15px;\n          text-align: center;\n          font-style: normal;\n          font-family: Rowdies;\n        }\n\n        .price {\n          color: $gray-1;\n          font-size: 24px;\n          font-weight: bold;\n          line-height: 30px;\n          font-style: normal;\n          text-align: center;\n          font-family: Rowdies;\n        }\n      }\n\n      .add-btn {\n        right: 20px;\n        position: relative;\n      }\n    }\n  }\n}",
                    "styleUrl": "./pizza-menu-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "accessors": {
                "background": {
                    "name": "background",
                    "getSignature": {
                        "name": "background",
                        "type": "",
                        "returnType": "",
                        "line": 20
                    }
                }
            },
            "templateData": "<div class=\"pizza-card\" [ngStyle]=\"background\">\n  <div class=\"content\">\n    <h4 class=\"mb-1\">{{title}}</h4>\n    <div>\n      <caption class=\"d-inline txt-gray-6\">{{numOfGrams}}g</caption>\n      <caption class=\"d-inline txt-gray-6 calories\">{{numOfCalories}} cal</caption>\n    </div>\n    <p class=\"description pt-1 pb-1 m-0\">{{description}}</p>\n    <div class=\"row pizza-card-footer\">\n      <div class=\"price-container pr-3 pl-0 py-2 col-4\">\n        <label class=\"price-label\">starts at</label>\n        <span class=\"price\">{{price | currency : 'USD' : 'symbol' : '1.0-0'}}</span>\n      </div>\n      <div class=\"col-8 px-0\">\n        <sb-icon-button class=\"add-btn float-right\" label=\"ADD\" (click)=\"onClick.emit($event)\"></sb-icon-button>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "PromotionCardComponent",
            "id": "component-PromotionCardComponent-7b94d45da999ec6e96e61dad9425b7cb",
            "file": "src/app/shared/stories/promotion-card/promotion-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-promotion-card",
            "styleUrls": [
                "./promotion-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./promotion-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "mainTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "secondTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "showDecorators",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sb-promotion-card',\n  templateUrl: './promotion-card.component.html',\n  styleUrls: ['./promotion-card.component.scss']\n})\nexport default class PromotionCardComponent {\n  @Input() mainTitle: string;\n  @Input() secondTitle: string;\n  @Input() bgColor: string;\n  @Input() description: string;\n  @Input() showDecorators = false;\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  constructor() { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/scss/colors';\n\n.promotion-card {\n  width: 588px;\n  height: 369px;\n  padding: 18px;\n  position: relative;\n  text-align: center;\n  border-radius: 10px;\n  mix-blend-mode: normal;\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.16);\n\n  .main-title-content {\n    z-index: 10;\n\n    .decorator-left {\n      position: absolute;\n      left: 0px;\n      bottom: -10px;\n      z-index: -1;\n    }\n\n    .decorator-right {\n      position: absolute;\n      top: 0;\n      right: 20px;\n      z-index: -1;\n    }\n  }\n\n  .second-title {\n    margin-left: 75px;\n    margin-right: 75px;\n  }\n\n  .description {\n    color: $white;\n    font-size: 16px;\n    line-height: 21px;\n    text-align: center;\n    font-style: normal;\n    font-weight: normal;\n    font-family: 'Red Hat Display';\n  }\n\n  .promotion-footer {\n    bottom: 10px;\n    position: absolute;\n\n    .disclaimer {\n      font-size: 12px;\n      font-weight: 500;\n      line-height: 16px;\n      margin-left: 55px;\n      font-style: normal;\n      margin-right: 55px;\n      font-family: 'Red Hat Display';\n    }\n  }\n}",
                    "styleUrl": "./promotion-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "templateData": "<div class=\"promotion-card\" [ngStyle]=\"{'background-color': bgColor}\">\n  <div class=\"main-title-content position-relative\">\n    <img *ngIf=\"showDecorators\" class=\"decorator-left\" src=\"assets/images/leaf-left.png\">\n    <h2 class=\"main-title txt-red\">{{mainTitle}}</h2>\n    <img *ngIf=\"showDecorators\" class=\"decorator-right\" src=\"assets/images/leaf-right.png\">\n  </div>\n  <h3 class=\"second-title txt-yellow my-0\">{{secondTitle}}</h3>\n  <span *ngIf=\"description\" class=\"description\">{{description}}</span>\n  <div class=\"promotion-footer\">\n    <sb-icon-button [showIcon]=\"true\" label=\"ADD TO CART\" (click)=\"onClick.emit($event)\"></sb-icon-button>\n    <p class=\"disclaimer txt-white pt-3\">Promotion valid only for pickup and express purchases, not valid with other coupons. Promotion valid only on Fridays.</p>\n  </div>\n</div>"
        },
        {
            "name": "SearchInputComponent",
            "id": "component-SearchInputComponent-076c74f7c5fffb06e1c4dd80528b3bf5",
            "file": "src/app/shared/stories/search-input/search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-search-input",
            "styleUrls": [
                "./search-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'search'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"search\" | \"address\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sb-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss']\n})\nexport default class SearchInputComponent {\n  @Input() type: 'search' | 'address' = 'search';\n\n  get iconClass() {\n    return (this.type === 'search') ? 'icon-search' : 'icon-pointer';\n  }\n  get placeholder() {\n    const searchType = (this.type === 'search') ? 'topping' : 'address';\n    return `Search for specific ${searchType}`;\n  }\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/scss/colors';\n\n.input-icons {\n  .icon {\n    top: 5px;\n    left: 35px;\n    color: $gray-2;\n    font-size: 30px;\n    min-width: 39px;\n    position: relative;\n    -webkit-box-pack: center;\n    display: -webkit-inline-box;\n  }\n\n  .input-field {\n    color: $gray-2;\n    font-size: 20px;\n    line-height: 26px;\n    padding: 22px 25px;\n    text-align: center;\n    margin-left: -25px;\n    font-style: normal;\n    border-radius: 50px;\n    font-weight: normal;\n    padding-left: 84.5px;\n    width: calc(100% - 25px);\n    background-color: $gray-4;\n    font-family: 'Red Hat Display';\n  }\n}",
                    "styleUrl": "./search-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "accessors": {
                "iconClass": {
                    "name": "iconClass",
                    "getSignature": {
                        "name": "iconClass",
                        "type": "",
                        "returnType": "",
                        "line": 11
                    }
                },
                "placeholder": {
                    "name": "placeholder",
                    "getSignature": {
                        "name": "placeholder",
                        "type": "",
                        "returnType": "",
                        "line": 14
                    }
                }
            },
            "templateData": "<div class=\"input-icons\">\n  <i class=\"icon\" [ngClass]=\"iconClass\"></i>\n  <input\n    class=\"input-field\"\n    [placeholder]=\"placeholder\">\n</div>"
        },
        {
            "name": "SignInComponent",
            "id": "component-SignInComponent-69cb530aab1419f8ef2ae996a6dbd6e4",
            "file": "src/app/auth/sign-in/sign-in.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sign-in",
            "styleUrls": [
                "./sign-in.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-in.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isEmailValid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isPasswordValid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "nameState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"success\" | \"danger\" | null",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "signUpForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleSignUp",
                    "args": [
                        {
                            "name": "user",
                            "type": "firebase.default.User | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "firebase.default.User | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFaceBookSignUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onGoogleSignUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSignUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthService } from '@app-services/auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit, OnDestroy {\n  public signUpForm: FormGroup;\n  public isEmailValid = false;\n  public isPasswordValid = false;\n  public nameState: 'success' | 'danger' | null;\n  private destroy$: Subject<boolean> = new Subject<boolean>();\n\n  onSignUp() {\n    if(this.isPasswordValid && this.isEmailValid && this.signUpForm.valid) {\n      const { email, password, name } = this.signUpForm.getRawValue();\n      this.authService.createUser(email, password, name).pipe(\n        takeUntil(this.destroy$)\n      ).subscribe(\n        ({user}) => {\n          this.handleSignUp(user);\n        }\n      );\n    } else {\n      this.nameState = this.name.invalid ? 'danger' : 'success';\n    }\n  }\n\n  onGoogleSignUp() {\n    this.authService.googleSignIn().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      ({ user }) => {\n        this.handleSignUp(user);\n      }\n    );\n  }\n\n  onFaceBookSignUp() {\n    this.authService.facebookSignIn().pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      ({ user }) => {\n        this.handleSignUp(user);\n      }\n    );\n  }\n\n  public get email(): FormControl {\n    return this.signUpForm.get('email') as FormControl;\n  }\n\n  public get password(): FormControl {\n    return this.signUpForm.get('password') as FormControl;\n  }\n\n  public get name(): FormControl {\n    return this.signUpForm.get('name') as FormControl;\n  }\n\n  private handleSignUp(user: firebase.default.User | null): void {\n    if (!!user) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n  ngOnInit() {\n    this.signUpForm = this.formBuilder.group({\n      email: [''],\n      password: [''],\n      name: ['', Validators.required],\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n  ) { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": " .sign-section {\n   height: 1095px;\n   .btn-sign {\n     text-align: center;\n     padding-top: 67px;\n   }\n\n   .btn-google {\n     text-align: center;\n     padding-top: 56px;\n   }\n\n   .btn-facebook {\n     text-align: center;\n     padding-top: 27px;\n   }\n }\n",
                    "styleUrl": "./sign-in.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 85,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "email": {
                    "name": "email",
                    "getSignature": {
                        "name": "email",
                        "type": "",
                        "returnType": "FormControl",
                        "line": 56
                    }
                },
                "password": {
                    "name": "password",
                    "getSignature": {
                        "name": "password",
                        "type": "",
                        "returnType": "FormControl",
                        "line": 60
                    }
                },
                "name": {
                    "name": "name",
                    "getSignature": {
                        "name": "name",
                        "type": "",
                        "returnType": "FormControl",
                        "line": 64
                    }
                }
            },
            "templateData": "<div class=\"sign-section\">\n  <h3 class=\"txt-yellow pb-4 pl-3\">Happy to have you!</h3>\n  <form [formGroup]=\"signUpForm\">\n    <label class=\"txt-gray-6\">Email</label>\n    <sb-text-input formControlName=\"email\" type=\"email\" (isValid)=\"isEmailValid = $event\"></sb-text-input>\n    <label class=\"txt-gray-6 pt-5\">Password</label>\n    <sb-text-input formControlName=\"password\" type=\"password\" (isValid)=\"isPasswordValid = $event\"></sb-text-input>\n    <label class=\"txt-gray-6 pt-5\">Name</label>\n    <sb-text-input formControlName=\"name\" type=\"text\" [state]=\"nameState\" customErrorMessage=\"Name is required\"></sb-text-input>\n    <label class=\"txt-gray-6 pt-5\">Phone Number</label>\n    <sb-text-input type=\"text\"></sb-text-input>\n  </form>\n  <div class=\"\">\n    <div class=\"btn-sign\"><sb-icon-button label=\"SIGN UP\" type=\"success\" width=\"345px\" (click)=\"onSignUp()\" [isDisabled]=\"!isEmailValid || !isPasswordValid\"></sb-icon-button></div>\n    <div class=\"btn-google\"><sb-icon-button label=\"SIGN UP WITH GOOGLE\" [isOutline]=\"true\" width=\"345px\" (click)=\"onGoogleSignUp()\"></sb-icon-button></div>\n    <div class=\"btn-facebook\"><sb-icon-button label=\"SIGN UP WITH FACEBOOK\" [isOutline]=\"true\" width=\"345px\" (click)=\"onFaceBookSignUp()\"></sb-icon-button></div>\n  </div>\n</div>"
        },
        {
            "name": "TextInputComponent",
            "id": "component-TextInputComponent-044372d9c0e748e8d2275237c57aca4f",
            "file": "src/app/shared/stories/text-input/text-input.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR"
                }
            ],
            "selector": "sb-text-input",
            "styleUrls": [
                "./text-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customErrorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "string | null"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean"
                },
                {
                    "name": "disableValidations",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean"
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string"
                },
                {
                    "name": "state",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "\"success\" | \"danger\" | null"
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"text\" | \"password\" | \"email\""
                }
            ],
            "outputsClass": [
                {
                    "name": "isValid",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_state",
                    "defaultValue": "this.state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "innerValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 135,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "inputErrors$",
                    "defaultValue": "new Observable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "inputRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'input'"
                        }
                    ]
                },
                {
                    "name": "keyStreem$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "propagateChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 152
                }
            ],
            "methodsClass": [
                {
                    "name": "checkPassword",
                    "args": [
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ hasErrors: any; message: string; }",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "inputErrorsSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onKey",
                    "args": [
                        {
                            "name": "algo",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "algo",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  forwardRef,\n  ViewEncapsulation,\n  ViewChild,\n  ElementRef,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  ControlValueAccessor\n} from '@angular/forms';\nimport { Observable, of, Subject } from 'rxjs';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\n\nconst EmailRegExp =\n/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst PasswordHasSpacesRegExp = /^(.*\\s+.*)+$/;\nconst PasswordLength = /^[\\p{Z}\\s]*(?:[^\\p{Z}\\s][\\p{Z}\\s]*){7,}$/;\nconst PasswordHasNumber = /\\d/;\nconst PasswordHasUppercase = /^(.*[A-Z]+.*)+$/;\nconst EmailErrorMessage = 'Please enter a valid email address.';\nconst IncludeSpacesErrorMessage = 'Can’t contain spaces.';\nconst HasIndicatedLengthErrorMessage = 'Must be at least 7 characters long.';\nconst IncludeNumbersErrorMessage = 'Must include a number.';\nconst IncludeUpperLetterMessage = 'Must include at least one upper lettter case.';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define\n  useExisting: forwardRef(() => TextInputComponent),\n  multi: true,\n};\n@Component({\n  selector: 'sb-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n})\nexport default class TextInputComponent implements ControlValueAccessor {\n\n  @Input() placeholder: string = '';\n  @Input() disabled: boolean = false;\n  @Input() type: 'text' | 'password' | 'email' = 'text';\n  @Input() state: 'success' | 'danger' | null = null;\n  @Input() disableValidations = false;\n  @Input() customErrorMessage: string | null;\n  @Output() isValid = new EventEmitter<boolean>();\n  public _state = this.state;\n  public keyStreem$: Subject<string> = new Subject();\n  public inputErrors$: Observable<any> = new Observable();\n\n  @ViewChild('input') inputRef: ElementRef;\n  get classes() {\n    return [`type-${this.type}`, `state-${this.state || this._state}`];\n  }\n\n  get iconClass() {\n    let icon;\n    switch (this.type) {\n    case 'password':\n      icon = 'icon-lock';\n      break;\n    case 'email':\n      icon = 'icon-mail';\n      break;\n    default:\n      icon = '';\n      break;\n    }\n    return [icon];\n  }\n\n  public onKey(algo: KeyboardEvent): void {\n    this.keyStreem$.next((algo.target as HTMLInputElement).value);\n  }\n\n  private inputErrorsSubscription(): void {\n    this.inputErrors$ = this.keyStreem$.pipe(\n      debounceTime(500),\n      switchMap((text) => {\n        if(this.disableValidations) {\n          return of({ hasErrors: false });\n        }\n\n        if (this.type === 'email') {\n          this.isValid.emit(EmailRegExp.test(String(text).toLowerCase()));\n          return of({\n            hasErrors: !EmailRegExp.test(String(text).toLowerCase()),\n            message: EmailErrorMessage,\n          });\n        } else if (this.type === 'password') {\n          return of(this.checkPassword(text));\n        }\n        this.isValid.emit(true);\n        return of({ hasErrors: false });\n      }),\n      tap(inputError => {\n        const tempStatus = inputError.hasErrors ? 'danger' : 'success';\n        this._state = this.state || tempStatus;\n      })\n    );\n  }\n\n  private checkPassword(password: string) {\n    const includeSpaces = PasswordHasSpacesRegExp.test(password);\n    const hasIndicatedLength = PasswordLength.test(password);\n    const includeNumbers = PasswordHasNumber.test(password);\n    const includeUpperLetter = PasswordHasUppercase.test(password);\n    const hasErrors = includeSpaces ||\n        !hasIndicatedLength ||\n        !includeNumbers ||\n        !includeUpperLetter;\n    this.isValid.emit(!hasErrors);\n    return {\n      hasErrors,\n      message: `Password ${includeSpaces ? IncludeSpacesErrorMessage : ''} \n                ${!hasIndicatedLength ? HasIndicatedLengthErrorMessage : ''}\n                ${!includeNumbers ? IncludeNumbersErrorMessage : ''}\n                ${!includeUpperLetter ? IncludeUpperLetterMessage : ''}\n                Password doesn’t match.`,\n    };\n  }\n\n  ngOnInit(): void {\n    this.inputErrorsSubscription();\n  }\n\n  constructor() {}\n\n  // ControlValueAccessor\n  private innerValue: any = '';\n\n  onChange(e: Event, value: any) {\n    this.innerValue = value;\n    this.propagateChange(this.innerValue);\n  }\n\n  get value(): any {\n    return this.innerValue;\n  }\n\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n    }\n  }\n\n  propagateChange = (_: any) => {};\n\n  writeValue(value: any) {\n    this.innerValue = value;\n  }\n\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../assets/scss/colors';\n\n.input-icons {\n  position: relative;\n  .icon {\n    position: absolute;\n    font-size: 30px;\n    left: 30px;\n    top: 20px;\n    color: $gray-4;\n    min-width:39px;\n    display: -webkit-inline-box;\n    -webkit-box-pack: center;\n  }\n  .input-field {\n    width: 100%;\n    padding: 22px 25px;\n    font-family: 'Red Hat Display';\n    font-style: normal;\n    font-weight: normal;\n    font-size: 20px;\n    line-height: 26px;\n    color: $gray-1;\n    background-color: $gray-6;\n    border-radius: 10px;\n    &.type-password, &.type-email {\n      padding-left: 84.5px;\n    }\n\n    &.state{\n      &-danger {\n        border: 2px solid $red;\n      }\n      &-success {\n        border: 2px solid $green-2;\n      }\n    }\n  }\n}",
                    "styleUrl": "./text-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 130
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "",
                        "returnType": "",
                        "line": 57
                    }
                },
                "iconClass": {
                    "name": "iconClass",
                    "getSignature": {
                        "name": "iconClass",
                        "type": "",
                        "returnType": "",
                        "line": 61
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 146,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "any",
                        "returnType": "any",
                        "line": 142
                    }
                }
            },
            "templateData": "<div class=\"input-icons\">\n  <i class=\"icon\" [ngClass]=\"iconClass\" *ngIf=\"type === 'email' || type === 'password'\"></i>\n  <input #input\n    class=\"input-field\" \n    [type]=\"type\" \n    [placeholder]=\"placeholder\" \n    [ngClass]=\"classes\" \n    [disabled]=\"disabled\"\n    (keyup)=\"onKey($event)\"\n    (blur)=\"onChange($event, input.value)\">\n  <ng-container *ngIf=\"(inputErrors$ | async) as inputErrors\">\n    <p *ngIf=\"inputErrors.hasErrors\" class=\"txt-red py-2 px-4\">{{inputErrors.message}}</p>\n  </ng-container>\n  <p *ngIf=\"!!customErrorMessage && state === 'danger'\" class=\"txt-red py-2 px-4\">{{customErrorMessage}}</p>\n</div>\n"
        },
        {
            "name": "WelcomeComponent",
            "id": "component-WelcomeComponent-3399c69154c2b35ba0784b6e4e7d3b56",
            "file": "src/app/auth/welcome/welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-welcome",
            "styleUrls": [
                "./welcome.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "redirectTo",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent {\n\n  public redirectTo(path: string): void {\n    this.router.navigate([path]);\n  }\n\n  constructor(  private router: Router ) { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".welcome-section {\n  padding-top: 95px;\n  .btn-content {\n    padding-top: 30px;\n    .btn-login, .btn-sign-in {\n      padding-left: 15px;\n    }\n  }\n}",
                    "styleUrl": "./welcome.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"welcome-section\">\n  <h2 class=\"txt-yellow mb-0 pl-3\">WELCOME!</h2>\n  <h3 class=\"txt-yellow pl-3\">Make yourself at home</h3>\n  <div class=\"btn-content\">\n    <sb-icon-button\n      class=\"btn-login\"\n      label=\"LOG IN\"\n      [isOutline]=\"true\"\n      (click)=\"redirectTo('auth/login')\"\n      width=\"224px\"></sb-icon-button>\n    <sb-icon-button\n      class=\"btn-sign-in\"\n      label=\"SIGN UP\"\n      (click)=\"redirectTo('auth/sign-up')\"\n      width=\"224px\"></sb-icon-button>\n  </div>\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-ad596b7ef0133cf36eb6e2bc37063120",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { reducer } from './store/app.reducer';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { environment } from '@app-environment';\n\n// Services\nimport { AuthService } from '@app-services/auth.service';\n\n// Guards\nimport { AuthGuard } from './guards/auth.guard';\n\n// Firebase\nimport { initializeApp,provideFirebaseApp } from '@angular/fire/app';\nimport { provideAuth,getAuth } from '@angular/fire/auth';\nimport { provideFirestore,getFirestore } from '@angular/fire/firestore';\n\n// Components\nimport { FooterComponent } from './components/footer/footer.component';\n\n// Share\nimport { SharedModule } from '@app-shared/shared.module';\nimport { AngularFireModule } from '@angular/fire/compat';\n\n@NgModule({\n  declarations: [AppComponent, FooterComponent],\n  imports: [\n    SharedModule,\n    BrowserModule,\n    AppRoutingModule,\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule,\n    StoreModule.forRoot({ app: reducer }),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    AngularFireModule.initializeApp(environment.firebase),\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideFirestore(() => getFirestore()),\n  ],\n  providers: [AuthService, AuthGuard],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "FooterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "provideAuth(() => getAuth())"
                        },
                        {
                            "name": "provideFirebaseApp(() => initializeApp(environment"
                        },
                        {
                            "name": "provideFirestore(() => getFirestore())"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-9b811dcca6d63ccc263f945e938efef5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => \"import('@app-auth/auth.module').then(m => m.AuthModule)\"\n  },\n  {\n    path: 'home',\n    loadChildren: () => \"import('./home/home.module').then(m => m.HomeModule)\",\n    canLoad: [AuthGuard]\n  },\n  { path: '', redirectTo: 'auth', pathMatch: 'full' },\n  { path: '**', redirectTo: 'auth' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-67dd9a4bb6143558b2b622e98a87a4c2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { environment } from '@app-environment';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRouterModule } from './auth.router.module';\nimport { AuthService } from '@app-services/auth.service';\n\n// Store\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './store/auth.reducer';\n\n// Share\nimport { SharedModule } from '@app-shared/shared.module';\n\n// Components\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\n// Firebase\nimport { AngularFireModule } from '@angular/fire/compat';\n\n// Components\nconst COMPONENTS = [\n  AuthComponent,\n  LoginComponent,\n  SignInComponent,\n  WelcomeComponent,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    SharedModule,\n    AuthRouterModule,\n    ReactiveFormsModule,\n    StoreModule.forFeature('auth', reducer),\n    AngularFireModule.initializeApp(environment.firebase)\n  ],\n  declarations: [...COMPONENTS],\n  providers: [ AuthService ]\n})\nexport class AuthModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "SignInComponent"
                        },
                        {
                            "name": "WelcomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthRouterModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthRouterModule",
            "id": "module-AuthRouterModule-322f8cfb41722b08f69aea833706b791",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.router.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from '@app-auth/auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      { path: 'welcome', component: WelcomeComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'sign-up', component: SignInComponent },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' }\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRouterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "id": "module-HomeModule-2a25d4bcc0c77d467bd4867dbad3c773",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { HomeRouterModule } from './home.router.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HomeRouterModule,\n  ],\n  declarations: [HomeComponent]\n})\nexport class HomeModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HomeRouterModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeRouterModule",
            "id": "module-HomeRouterModule-4b737b95ee702d0628ad7a5802705f5f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/home/home.router.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRouterModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-7a5e96446f413f0f5a48961a3d59c6cc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Stories\nimport Button from './stories/button/button.component';\nimport Header from './stories/header/header.component';\nimport Dropdown from './stories/dropdown/dropdown.component';\nimport TextInput from './stories/text-input/text-input.component';\nimport IconButton from './stories/icon-button/icon-button.component';\nimport PizzaMenuCardComponent from './stories/pizza-menu-card/pizza-menu-card.component';\n\nconst STORIES = [\n  Header,\n  Button,\n  Dropdown,\n  TextInput,\n  IconButton,\n  PizzaMenuCardComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [...STORIES],\n  exports: [...STORIES]\n})\nexport class SharedModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Button"
                        },
                        {
                            "name": "Dropdown"
                        },
                        {
                            "name": "Header"
                        },
                        {
                            "name": "IconButton"
                        },
                        {
                            "name": "PizzaMenuCardComponent"
                        },
                        {
                            "name": "TextInput"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "Button"
                        },
                        {
                            "name": "Dropdown"
                        },
                        {
                            "name": "Header"
                        },
                        {
                            "name": "IconButton"
                        },
                        {
                            "name": "PizzaMenuCardComponent"
                        },
                        {
                            "name": "TextInput"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Address",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AddressAdd",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AddressEditDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AddressEditNotDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "appReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(AppActions.myAction, (state, {payload}) => ({\n    ...state,\n    myState: payload\n  }))\n)"
            },
            {
                "name": "authorizeUser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  Types.SAVE_USER,\n  props<{ payload: User }>()\n)"
            },
            {
                "name": "authReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(AuthActions.authorizeUser, (state, {payload}) => ({\n    ...state,\n    user: payload\n  }))\n)"
            },
            {
                "name": "COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/auth.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  AuthComponent,\n  LoginComponent,\n  SignInComponent,\n  WelcomeComponent,\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CreditCardDeleteDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CreditCardDeleteNotDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CreditCardNew",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define\n  useExisting: forwardRef(() => TextInputComponent),\n  multi: true,\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EggBasil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Email",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EmailErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Please enter a valid email address.'"
            },
            {
                "name": "EmailRegExp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  firebase: {\n    projectId: 'the-good-pizza-club',\n    appId: '1:705243269757:web:eac1dea0e1c7a1a690bf14',\n    storageBucket: 'the-good-pizza-club.appspot.com',\n    locationId: 'us-east1',\n    apiKey: 'AIzaSyCcAC85Z1L19XUe3o3UgR_NfAH5ST88IAE',\n    authDomain: 'the-good-pizza-club.firebaseapp.com',\n    messagingSenderId: '705243269757',\n  },\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  firebase: {\n    projectId: 'the-good-pizza-club',\n    appId: '1:705243269757:web:eac1dea0e1c7a1a690bf14',\n    storageBucket: 'the-good-pizza-club.appspot.com',\n    locationId: 'us-east1',\n    apiKey: 'AIzaSyCcAC85Z1L19XUe3o3UgR_NfAH5ST88IAE',\n    authDomain: 'the-good-pizza-club.firebaseapp.com',\n    messagingSenderId: '705243269757',\n  },\n  production: false\n}"
            },
            {
                "name": "HasIndicatedLengthErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Must be at least 7 characters long.'"
            },
            {
                "name": "header",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "IncludeNumbersErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Must include a number.'"
            },
            {
                "name": "IncludeSpacesErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Can’t contain spaces.'"
            },
            {
                "name": "IncludeUpperLetterMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Must include at least one upper lettter case.'"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "{\n  myState: ''\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AuthState",
                "defaultValue": "{\n  user: null\n}"
            },
            {
                "name": "italian",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "lives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "myAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  Types.MY_ACTION,\n  props<{ payload: string }>()\n)"
            },
            {
                "name": "NOT_AUTHORIZATION_MESSAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'You are not authorized to view this page, please log in first'"
            },
            {
                "name": "Password",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PasswordHasNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/\\d/"
            },
            {
                "name": "PasswordHasSpacesRegExp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/^(.*\\s+.*)+$/"
            },
            {
                "name": "PasswordHasUppercase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/^(.*[A-Z]+.*)+$/"
            },
            {
                "name": "PasswordLength",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/^[\\p{Z}\\s]*(?:[^\\p{Z}\\s][\\p{Z}\\s]*){7,}$/"
            },
            {
                "name": "pepperoni",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/chip/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Promotion1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/promotion-card/promotion-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Promotion2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/promotion-card/promotion-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "salami",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "selectAppState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AppState>('app')"
            },
            {
                "name": "selectAuthState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AuthState>('auth')"
            },
            {
                "name": "selectMyState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectAppState,\n  (state: AppState) => state.myState\n)"
            },
            {
                "name": "selectUser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectAuthState,\n  (state: AuthState) => state.user\n)"
            },
            {
                "name": "State_Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "State_Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "STORIES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  Header,\n  Button,\n  Dropdown,\n  TextInput,\n  IconButton,\n  PizzaMenuCardComponent\n]"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "supreme",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AddressCreditCard>",
                "defaultValue": "(args: AddressCreditCard) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/chip/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Chip>",
                "defaultValue": "(args: Chip) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Dropdown>",
                "defaultValue": "(args: Dropdown) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PizzaMenuCard>",
                "defaultValue": "(args: PizzaMenuCard) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconButton>",
                "defaultValue": "(args: IconButton) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/promotion-card/promotion-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PromotionCard>",
                "defaultValue": "(args: PromotionCard) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TextInput>",
                "defaultValue": "(args: TextInput) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SearchInput>",
                "defaultValue": "(args: SearchInput) => ({\n  props: args,\n})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "tomato",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "VeggieBasil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "reducer",
                "file": "src/app/store/app.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "reducer",
                "file": "src/app/auth/store/auth.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "CardStates",
                "childs": [
                    {
                        "name": "NEW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NEW"
                    },
                    {
                        "name": "EDIT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "EDIT"
                    },
                    {
                        "name": "DELETE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DELETE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/stories/address-credit-card/address-credit-card.component.ts"
            },
            {
                "name": "CardTypes",
                "childs": [
                    {
                        "name": "Address",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "address"
                    },
                    {
                        "name": "Credit",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "credit"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/stories/address-credit-card/address-credit-card.component.ts"
            },
            {
                "name": "CreditCardBrand",
                "childs": [
                    {
                        "name": "MasterCard",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "mastercard"
                    },
                    {
                        "name": "Visa",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "visa"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/shared/stories/address-credit-card/address-credit-card.component.ts"
            },
            {
                "name": "Types",
                "childs": [
                    {
                        "name": "MY_ACTION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[core] my action"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/store/app.actions.ts"
            },
            {
                "name": "Types",
                "childs": [
                    {
                        "name": "SAVE_USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[auth] save user"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/auth/store/auth.actions.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/stories/search-input/search-input.stories.ts": [
                {
                    "name": "Address",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SearchInput>",
                    "defaultValue": "(args: SearchInput) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts": [
                {
                    "name": "AddressAdd",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AddressEditDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AddressEditNotDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CreditCardDeleteDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CreditCardDeleteNotDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CreditCardNew",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AddressCreditCard>",
                    "defaultValue": "(args: AddressCreditCard) => ({\n  props: args,\n})"
                }
            ],
            "src/app/store/app.reducer.ts": [
                {
                    "name": "appReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(AppActions.myAction, (state, {payload}) => ({\n    ...state,\n    myState: payload\n  }))\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "{\n  myState: ''\n}"
                },
                {
                    "name": "selectAppState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AppState>('app')"
                },
                {
                    "name": "selectMyState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectAppState,\n  (state: AppState) => state.myState\n)"
                }
            ],
            "src/app/auth/store/auth.actions.ts": [
                {
                    "name": "authorizeUser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  Types.SAVE_USER,\n  props<{ payload: User }>()\n)"
                }
            ],
            "src/app/auth/store/auth.reducer.ts": [
                {
                    "name": "authReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(AuthActions.authorizeUser, (state, {payload}) => ({\n    ...state,\n    user: payload\n  }))\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthState",
                    "defaultValue": "{\n  user: null\n}"
                },
                {
                    "name": "selectAuthState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AuthState>('auth')"
                },
                {
                    "name": "selectUser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectAuthState,\n  (state: AuthState) => state.user\n)"
                }
            ],
            "src/app/auth/auth.module.ts": [
                {
                    "name": "COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/auth.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  AuthComponent,\n  LoginComponent,\n  SignInComponent,\n  WelcomeComponent,\n]"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/shared/stories/text-input/text-input.component.ts": [
                {
                    "name": "CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "{\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define\n  useExisting: forwardRef(() => TextInputComponent),\n  multi: true,\n}"
                },
                {
                    "name": "EmailErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Please enter a valid email address.'"
                },
                {
                    "name": "EmailRegExp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/"
                },
                {
                    "name": "HasIndicatedLengthErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Must be at least 7 characters long.'"
                },
                {
                    "name": "IncludeNumbersErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Must include a number.'"
                },
                {
                    "name": "IncludeSpacesErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Can’t contain spaces.'"
                },
                {
                    "name": "IncludeUpperLetterMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Must include at least one upper lettter case.'"
                },
                {
                    "name": "PasswordHasNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/\\d/"
                },
                {
                    "name": "PasswordHasSpacesRegExp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/^(.*\\s+.*)+$/"
                },
                {
                    "name": "PasswordHasUppercase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/^(.*[A-Z]+.*)+$/"
                },
                {
                    "name": "PasswordLength",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/^[\\p{Z}\\s]*(?:[^\\p{Z}\\s][\\p{Z}\\s]*){7,}$/"
                }
            ],
            "src/app/shared/stories/text-input/text-input.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Email",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Password",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "State_Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "State_Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TextInput>",
                    "defaultValue": "(args: TextInput) => ({\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts": [
                {
                    "name": "EggBasil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "italian",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "lives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "pepperoni",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "salami",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "supreme",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PizzaMenuCard>",
                    "defaultValue": "(args: PizzaMenuCard) => ({\n  props: args,\n})"
                },
                {
                    "name": "tomato",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "VeggieBasil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  firebase: {\n    projectId: 'the-good-pizza-club',\n    appId: '1:705243269757:web:eac1dea0e1c7a1a690bf14',\n    storageBucket: 'the-good-pizza-club.appspot.com',\n    locationId: 'us-east1',\n    apiKey: 'AIzaSyCcAC85Z1L19XUe3o3UgR_NfAH5ST88IAE',\n    authDomain: 'the-good-pizza-club.firebaseapp.com',\n    messagingSenderId: '705243269757',\n  },\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  firebase: {\n    projectId: 'the-good-pizza-club',\n    appId: '1:705243269757:web:eac1dea0e1c7a1a690bf14',\n    storageBucket: 'the-good-pizza-club.appspot.com',\n    locationId: 'us-east1',\n    apiKey: 'AIzaSyCcAC85Z1L19XUe3o3UgR_NfAH5ST88IAE',\n    authDomain: 'the-good-pizza-club.firebaseapp.com',\n    messagingSenderId: '705243269757',\n  },\n  production: false\n}"
                }
            ],
            "src/app/shared/stories/header/header.stories.ts": [
                {
                    "name": "header",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/app/store/app.actions.ts": [
                {
                    "name": "myAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  Types.MY_ACTION,\n  props<{ payload: string }>()\n)"
                }
            ],
            "src/app/guards/auth.guard.ts": [
                {
                    "name": "NOT_AUTHORIZATION_MESSAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'You are not authorized to view this page, please log in first'"
                }
            ],
            "src/app/shared/stories/chip/chip.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/chip/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/chip/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Chip>",
                    "defaultValue": "(args: Chip) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/stories/dropdown/dropdown.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Dropdown>",
                    "defaultValue": "(args: Dropdown) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/stories/button/button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/stories/icon-button/icon-button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IconButton>",
                    "defaultValue": "(args: IconButton) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/stories/promotion-card/promotion-card.stories.ts": [
                {
                    "name": "Promotion1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/promotion-card/promotion-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Promotion2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/promotion-card/promotion-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/stories/promotion-card/promotion-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PromotionCard>",
                    "defaultValue": "(args: PromotionCard) => ({\n  props: args,\n})"
                }
            ],
            "src/app/shared/shared.module.ts": [
                {
                    "name": "STORIES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  Header,\n  Button,\n  Dropdown,\n  TextInput,\n  IconButton,\n  PizzaMenuCardComponent\n]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/store/app.reducer.ts": [
                {
                    "name": "reducer",
                    "file": "src/app/store/app.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/auth/store/auth.reducer.ts": [
                {
                    "name": "reducer",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/shared/stories/address-credit-card/address-credit-card.component.ts": [
                {
                    "name": "CardStates",
                    "childs": [
                        {
                            "name": "NEW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NEW"
                        },
                        {
                            "name": "EDIT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "EDIT"
                        },
                        {
                            "name": "DELETE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DELETE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/stories/address-credit-card/address-credit-card.component.ts"
                },
                {
                    "name": "CardTypes",
                    "childs": [
                        {
                            "name": "Address",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "address"
                        },
                        {
                            "name": "Credit",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "credit"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/stories/address-credit-card/address-credit-card.component.ts"
                },
                {
                    "name": "CreditCardBrand",
                    "childs": [
                        {
                            "name": "MasterCard",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "mastercard"
                        },
                        {
                            "name": "Visa",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "visa"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/shared/stories/address-credit-card/address-credit-card.component.ts"
                }
            ],
            "src/app/store/app.actions.ts": [
                {
                    "name": "Types",
                    "childs": [
                        {
                            "name": "MY_ACTION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[core] my action"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/store/app.actions.ts"
                }
            ],
            "src/app/auth/store/auth.actions.ts": [
                {
                    "name": "Types",
                    "childs": [
                        {
                            "name": "SAVE_USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[auth] save user"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/auth/store/auth.actions.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "auth",
                        "loadChildren": "@app-auth/auth.module#AuthModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/auth/auth.router.module.ts",
                                        "module": "AuthRouterModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "AuthComponent",
                                                "children": [
                                                    {
                                                        "path": "welcome",
                                                        "component": "WelcomeComponent"
                                                    },
                                                    {
                                                        "path": "login",
                                                        "component": "LoginComponent"
                                                    },
                                                    {
                                                        "path": "sign-up",
                                                        "component": "SignInComponent"
                                                    },
                                                    {
                                                        "path": "",
                                                        "redirectTo": "welcome",
                                                        "pathMatch": "full"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AuthModule"
                            }
                        ]
                    },
                    {
                        "path": "home",
                        "loadChildren": "./home/home.module#HomeModule",
                        "canLoad": [
                            "AuthGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/home/home.router.module.ts",
                                        "module": "HomeRouterModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "HomeComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "HomeModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "redirectTo": "auth",
                        "pathMatch": "full"
                    },
                    {
                        "path": "**",
                        "redirectTo": "auth"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/auth.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/sign-in/sign-in.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authorizeUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAuthState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/welcome/welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NOT_AUTHORIZATION_MESSAGE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/general.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownValue",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/general.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/general.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STORIES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/address-credit-card/address-credit-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddressCreditCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddressAdd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddressEditDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddressEditNotDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreditCardDeleteDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreditCardDeleteNotDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreditCardNew",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/chip/chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/chip/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/chip/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "header",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/icon-button/icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PizzaMenuCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EggBasil",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "italian",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "lives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pepperoni",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "salami",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "supreme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tomato",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VeggieBasil",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/promotion-card/promotion-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PromotionCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/promotion-card/promotion-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Promotion1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/promotion-card/promotion-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Promotion2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/promotion-card/promotion-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/search-input/search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/search-input/search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Address",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/search-input/search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/search-input/search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmailErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmailRegExp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HasIndicatedLengthErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IncludeNumbersErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IncludeSpacesErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IncludeUpperLetterMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordHasNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordHasSpacesRegExp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordHasUppercase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordLength",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Email",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Password",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "State_Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "State_Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "myAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectMyState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}