{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-23456cf193dad8b94f0130c1c2d97616",
            "file": "src/app/store/app.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, Action, createFeatureSelector, on, createSelector } from '@ngrx/store';\nimport * as AppActions from './app.actions';\n\nexport interface AppState {\n  myState: string;\n};\n\nconst initialState: AppState = {\n  myState: ''\n};\n\nconst appReducer = createReducer(\n  initialState,\n  on(AppActions.myAction, (state, {payload}) => ({\n    ...state,\n    myState: payload\n  }))\n);\n\nexport  function  reducer(state: AppState | undefined, action: Action) {\n  return appReducer(state, action);\n}\n\n// Selectors\nexport const selectAppState = createFeatureSelector<AppState>('app');\nexport const selectMyState = createSelector(\n  selectAppState,\n  (state: AppState) => state.myState\n);\n",
            "properties": [
                {
                    "name": "myState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "DropdownValue",
            "id": "interface-DropdownValue-7879153517735c1cb450d9e09201a613",
            "file": "src/shared/general.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DropdownValue {\n  value: string | number;\n  text?: string;\n  disabled?: boolean;\n};\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AddressCreditCardComponent",
            "id": "component-AddressCreditCardComponent-2c891b6193ea22062ddee70f78ba2c5b",
            "file": "src/stories/address-credit-card/address-credit-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-address-credit-card",
            "styleUrls": [
                "./address-credit-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./address-credit-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "content2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string"
                },
                {
                    "name": "creditCardBrand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "CreditCardBrand"
                },
                {
                    "name": "isDefault",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "state",
                    "defaultValue": "CardStates.NEW",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "CardStates"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "CardTypes"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "EventEmitter"
                },
                {
                    "name": "onDefaultClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport enum CardTypes {\n  'Address' = 'address',\n  'Credit' = 'credit'\n};\n\nexport enum CardStates {\n  'NEW' = 'NEW',\n  'EDIT' = 'EDIT',\n  'DELETE' = 'DELETE'\n};\n\nexport enum CreditCardBrand {\n  'MasterCard' = 'MasterCard',\n  'Visa' = 'Visa'\n};\n\n@Component({\n  selector: 'sb-address-credit-card',\n  templateUrl: './address-credit-card.component.html',\n  styleUrls: ['./address-credit-card.component.scss']\n})\nexport default class AddressCreditCardComponent {\n  @Input() title: string;\n  @Input() content1: string;\n  @Input() content2: string;\n  @Input() isDefault: boolean = false;\n  @Input() type: CardTypes;\n  @Input() state: CardStates = CardStates.NEW;\n  @Input() creditCardBrand: CreditCardBrand;\n\n  @Output() onClick = new EventEmitter<Event>();\n  @Output() onDefaultClick = new EventEmitter<Event>();\n\n  public get footerText() : string {\n    let text;\n    if(this.type === CardTypes.Address) {\n      text = this.isDefault ? 'Default address' : 'Make Favorite';\n      text = this.state === CardStates.NEW ? 'Add new address' : text;\n    } else {\n      text = this.isDefault ? 'Using this card' : 'Use this card';\n      text = this.state === CardStates.NEW ? 'Add payment method' : text;\n    }\n    return text;\n  }\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../assets/scss/colors';\n\n.address-credit-card {\n  width: 350px;\n  padding: 20px 0px 20px 20px;\n  display: flex;\n  min-height: 82px;\n  background: $gray-1;\n  border-radius: 10px;\n  flex-direction: column;\n  align-items: flex-start;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15);\n\n  .card-content {\n    color: $white;\n    font-size: 16px;\n    margin-right: 22%;\n    line-height: 21px;\n    font-style: normal;\n    font-weight: normal;\n    font-family: 'Red Hat Display';\n  }\n\n  .card-footer {\n    &-text {\n      color: $gray-3;\n      max-width: 165px;\n      vertical-align: middle;\n    }\n\n    .icon {\n      top: 5px;\n      right: -10px;\n      cursor: pointer;\n      position: absolute;\n      color: $gray-3;\n    }\n  }\n}",
                    "styleUrl": "./address-credit-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 46
            },
            "accessors": {
                "footerText": {
                    "name": "footerText",
                    "getSignature": {
                        "name": "footerText",
                        "type": "string",
                        "returnType": "string",
                        "line": 36
                    }
                }
            },
            "templateData": "<div class=\"address-credit-card\">\n  <div *ngIf=\"state !== 'NEW'\" class=\"card-content\">\n    <img *ngIf=\"type === 'Credit\" src=\"/assets/images/visa.svg\">\n    <h4 class=\"title txt-white\">{{title}}</h4>\n    <p class=\"card-content\">{{content1}}</p>\n    <p class=\"card-content\">{{content2}}</p>\n  </div>\n  <div class=\"card-footer p-0 row align-items-center\">\n    <sb-icon-button class=\"col-auto\"[isOutline]=\"true\" [label]=\"state\" (click)=\"onClick.emit($event)\"></sb-icon-button>\n    <div class=\"position-relative col-auto row\">\n      <label class=\"card-footer-text text-truncate\" [ngClass]=\"{'txt-gray-6': isDefault || state === 'NEW'}\">{{footerText}}</label>\n      <li *ngIf=\"state !== 'NEW'\" class=\"icon icon-start\" (click)=\"onDefaultClick.emit($event)\" [ngClass]=\"{'txt-yellow': isDefault}\"></li>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-43b40328681695b51e2e29301e186c07",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dropdownValues",
                    "defaultValue": "[\n    {\n      value: '1',\n      text: 'Item One',\n      disabled: true,\n    },\n    {\n      value: '2',\n      text: 'Item Two'\n    },\n    {\n      value: '3',\n      text: 'Item Three'\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownValue[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "'theGoodPizzaClub'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onItemSelected",
                    "args": [
                        {
                            "name": "item",
                            "type": "DropdownValue",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "DropdownValue",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { DropdownValue } from '../shared/general.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'theGoodPizzaClub';\n  public dropdownValues: DropdownValue[] = [\n    {\n      value: '1',\n      text: 'Item One',\n      disabled: true,\n    },\n    {\n      value: '2',\n      text: 'Item Two'\n    },\n    {\n      value: '3',\n      text: 'Item Three'\n    },\n  ];\n\n  onItemSelected(item: DropdownValue) {\n    console.log(item);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n<div class=\"container p-3 bg-black\">\n  <button type=\"button\" class=\"btn btn-primary mr-2\">Primary</button>\n  <button type=\"button\" class=\"btn btn-secondary txt-gray-6 mr-2\">Secondary</button>\n  <button type=\"button\" class=\"btn bg-green-1 txt-gray-6 mr-2\">Green</button>\n  <button type=\"button\" class=\"btn btn-light txt-gray-4 mr-2\">Light</button>\n  <br><br>\n  <button type=\"button\" class=\"btn btn-outline-primary mr-2\">Primary</button>\n  <button type=\"button\" class=\"btn btn-outline-secondary mr-2\">Secondary</button>\n  <button type=\"button\" class=\"btn btn-outline-light mr-2\">Light</button>\n  <h3 class=\"txt-primary pt-1\">Primary Text</h3>\n  <h3 class=\"txt-secondary pt-1\">Secondary Text</h3>\n  <h3 class=\"txt-yellow pt-1\">Title Text</h3>\n  <h3 class=\"txt-white pt-1\">Title Text Secondary</h3>\n  <hr>\n  <h4 class=\"txt-green-1 pt-1\">From StoryBook:</h4>\n  <sb-button type=\"primary\" label=\"CUSTUMIZE YOUR OWN\"></sb-button>\n  <i class=\"icon-lock txt-green-1\"></i>\n  <span class=\"icon-lock txt-green-1\"></span>\n</div>\n<sb-dropdown [dropdownValues]=\"dropdownValues\" (itemSelected)=\"onItemSelected($event)\"></sb-dropdown>\n<sb-text-input state='success'></sb-text-input>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-21698c41ee19ae4928dfdc8ec8dd523e",
            "file": "src/stories/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-button",
            "styleUrls": [
                "./button.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasShadow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "isOutline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"primary\" | \"secondary\" | \"success\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'sb-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.scss'],\n})\nexport default class ButtonComponent {\n  @Input() type?: 'primary' | 'secondary' | 'success' = 'primary';\n  @Input() label = 'Button';\n  @Input() isOutline = false;\n  @Input() hasShadow = false;\n  @Input() isDisabled = false;\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const btnType = !this.isDisabled? this.type : 'light';\n    const classes = ['btn', `btn-${this.isOutline? 'outline-' : ''}${btnType}`];\n    if (this.hasShadow) {\n      classes.push('btn-shadow');\n    }\n    return classes;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../assets/scss/colors';\n\n.btn {\n  top: 20px;\n  left: 20px;\n  padding: 15.5px 41.5px;\n  font-size: 30px;\n  line-height: 37px;\n  text-align: center;\n  font-style: normal;\n  align-items: center;\n  font-family: Rowdies;\n  border-radius: 200px;\n  justify-content: center;\n  &-primary,\n  &-secondary {\n    color: $gray-6;\n  }\n  &-light {\n    opacity: 1;\n    color: $gray-4;\n  }\n  &-shadow {\n    box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.25);\n  }\n}\n",
                    "styleUrl": "./button.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 17
                    }
                }
            },
            "templateData": "<button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\" [disabled]=\"isDisabled\">\n    {{ label }}\n</button>"
        },
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-ff8a8499cb1d4d09c992a666a0e357c9",
            "file": "src/stories/chip/chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-chip",
            "styleUrls": [
                "./chip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"primary\" | \"secondary\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sb-chip',\n  templateUrl: './chip.component.html',\n  styleUrls: ['./chip.component.scss']\n})\nexport default class ChipComponent {\n  @Input() label = 'text';\n  @Input() type?: 'primary' | 'secondary' = 'primary';\n  @Output() onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const classes = ['badge', `badge-${this.type}`];\n    return classes;\n  }\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../assets/scss/colors';\n\n.badge {\n  color: $white;\n  font-size: 16px;\n  font-weight: 400;\n  padding: 8px 18px;\n  line-height: 21px;\n  font-style: normal;\n  text-align: center;\n  align-items: center;\n  border-radius: 20px;\n  letter-spacing: 0em;\n  justify-content: center;\n  font-family: 'Red Hat Display';\n\n  &-primary {\n    background-color: $green-2;\n  }\n\n  &-secondary {\n    background-color: $gray-2;\n  }\n\n  .icon {\n    color: $white;\n    cursor: pointer;\n    font-size: 10px;\n    display: contents;\n    &::before {\n      margin-left: 15px;\n    }\n  }\n}",
                    "styleUrl": "./chip.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 13
                    }
                }
            },
            "templateData": "<span [ngClass]=\"classes\">\n  {{ label }}\n  <li class=\"icon icon-x\" (click)=\"onClick.emit($event)\"></li>\n</span>"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-9685d0681221f2d1991aca9a422f7a63",
            "file": "src/stories/dropdown/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-dropdown",
            "styleUrls": [
                "./dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dropdownValues",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "DropdownValue[]"
                },
                {
                    "name": "label",
                    "defaultValue": "'Select an Item'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "itemSelected",
                    "defaultValue": "new EventEmitter<DropdownValue>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onItemClick",
                    "args": [
                        {
                            "name": "value",
                            "type": "DropdownValue",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "DropdownValue",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DropdownValue } from '../../shared/general.model';\n\n@Component({\n  selector: 'sb-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport default class DropdownComponent {\n  @Input() dropdownValues: DropdownValue[] = [];\n  @Input() label = 'Select an Item';\n  @Output() itemSelected = new EventEmitter<DropdownValue>();\n  onItemClick(value: DropdownValue) {\n    this.itemSelected.emit(value);\n  }\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../assets/scss/colors';\n\n.dropdown {\n\t&.show {\n\t\t.dropdown-toggle {\n\t\t\t&::before {\n\t\t\t\tpadding-left: 0px;\n\t\t\t\tpadding-right: 10px;\n\t\t\t\ttransform: rotate(180deg);\n\t\t\t}\n\t\t}\n\t}\n}\n.dropdown-toggle {\n\tcolor: $white;\n\tpadding: 25px;\n\tfont-size: 20px;\n\tmin-width: 230px;\n\tmargin-left: 5px;\n\tline-height: 26px;\n\tbackground: $gray-2;\n\tborder-radius: 10px;\n\tfont-style: normal;\n\tfont-weight: normal;\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\tfont-family: 'Red Hat Display';\n\tbox-shadow: 0px 4px 8px rgba(0, 0, 0, 0.15);\n\t&::after {\n\t\tdisplay: none;\n\t}\n\t&::before {\n\t\tfloat: right;\n\t\tfont-size: 30px;\n\t\tpadding-left: 10px;\n\t}\n}\n.dropdown-menu {\n\tmargin: 0px;\n\tmin-width: 230px;\n\tbackground: $gray-2;\n\ttop: -10px !important;\n\t.dropdown-item {\n\t\tcolor: $white;\n\t\tfont-size: 20px;\n\t\tline-height: 26px;\n\t\tfont-style: normal;\n\t\tfont-weight: normal;\n\t\tfont-family: 'Red Hat Display';\n\t\t&.disabled {\n\t\t\tcolor: $gray-3;\n\t\t}\n\t\t&:hover {\n\t\t\tborder-radius: 50px;\n\t\t\ttext-decoration: none;\n\t\t\tbackground-color: $green-2;\n\t\t}\n\t}\n}\n",
                    "styleUrl": "./dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "templateData": "<li class=\"dropdown\">\n  <a class=\"dropdown-toggle icon-menu-arrow\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n    aria-expanded=\"false\">{{label}}</a>\n  <div class=\"dropdown-menu\">\n    <a \n      *ngFor=\"let dropdownValue of dropdownValues\"\n      [ngClass]=\"{'disabled': dropdownValue.disabled}\"\n      (click)=\"onItemClick(dropdownValue)\"\n      class=\"dropdown-item\">\n      {{dropdownValue.text || dropdownValue.value}}\n    </a> \n  </div>\n</li>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-ca96c306c1ae76ce7bb812cbcdffdbe0",
            "file": "src/stories/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-header",
            "styleUrls": [
                "./header.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "menuItems",
                    "defaultValue": "[\n    {\n      name: 'Menu',\n      url: '/',\n    },\n    {\n      name: 'About Us',\n      url: 'about-us',\n    },\n    {\n      name: 'Contact',\n      url: '/contact',\n    },\n    {\n      name: 'Login / Sign up',\n      url: '/login',\n    },\n    {\n      name: 'Help',\n      url: '/help',\n    },\n    {\n      name: '',\n      url: '/shopping',\n      icon: 'icon-shopping'\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'sb-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.scss'],\n})\nexport default class HeaderComponent {\n  @Input() user: unknown = null;\n\n  @Output() onLogin = new EventEmitter<Event>();\n  @Output() onLogout = new EventEmitter<Event>();\n  @Output() onCreateAccount = new EventEmitter<Event>();\n\n  public menuItems = [\n    {\n      name: 'Menu',\n      url: '/',\n    },\n    {\n      name: 'About Us',\n      url: 'about-us',\n    },\n    {\n      name: 'Contact',\n      url: '/contact',\n    },\n    {\n      name: 'Login / Sign up',\n      url: '/login',\n    },\n    {\n      name: 'Help',\n      url: '/help',\n    },\n    {\n      name: '',\n      url: '/shopping',\n      icon: 'icon-shopping'\n    }\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../assets/scss/colors';\n\n.nav-containter {\n  padding: 30px 37.5px;\n\n  .sb-nav-item {\n    a {\n      order: 0;\n      margin: 0px;\n      padding: 0px;\n      font-size: 24px;\n      font-weight: 300;\n      position: static;\n      line-height: 30px;\n      font-style: normal;\n      text-align: center;\n      padding-right: 90px;\n      font-family: Rowdies;\n    }\n\n    .nav-link, .icon {\n       color: $gray-6;\n      &.active,\n      &:hover {\n        color: $gray-4;\n      }\n    }\n  }\n}",
                    "styleUrl": "./header.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<header>\n  <nav class=\"navbar navbar-expand-lg navbar-light\">\n    <div class=\"container-fluid\">\n      <div class=\"collapse navbar-collapse nav-containter\" id=\"navbarText\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li *ngFor=\"let menuItem of menuItems\" class=\"nav-item sb-nav-item\">\n            <a class=\"nav-link\" [href]=\"menuItem.url\">\n              {{ menuItem.name }} <span *ngIf=\"menuItem.icon\" class=\"icon\" [ngClass]=\"menuItem.icon\"></span>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>"
        },
        {
            "name": "IconButtonComponent",
            "id": "component-IconButtonComponent-6bbf7217940a117f43561897bf62cb65",
            "file": "src/stories/icon-button/icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-icon-button",
            "styleUrls": [
                "./icon-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hasShadow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                },
                {
                    "name": "isOutline",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "showIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "type",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"primary\" | \"secondary\" | \"success\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'sb-icon-button',\n  templateUrl: './icon-button.component.html',\n  styleUrls: ['./icon-button.component.scss']\n})\nexport default class IconButtonComponent {\n  @Input() type?: 'primary' | 'secondary' | 'success' = 'primary';\n  @Input() label = 'Button';\n  @Input() isOutline = false;\n  @Input() hasShadow = false;\n  @Input() isDisabled = false;\n  @Input() showIcon = false;\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const btnType = !this.isDisabled? this.type : 'light';\n    const classes = ['btn', `btn-${this.isOutline? 'outline-' : ''}${btnType}`];\n    if (this.hasShadow) {\n      classes.push('btn-shadow');\n    }\n    return classes;\n  }\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../assets/scss/colors';\n\n.btn {\n  left: 80px;\n  padding: 15.5px 35px;\n  font-size: 20px;\n  font-weight: 400;\n  line-height: 25px;\n  text-align: center;\n  font-style: normal;\n  align-items: center;\n  font-family: Rowdies;\n  border-radius: 200px;\n  justify-content: center;\n\n  .icon {\n      top: 1px;\n      color: $yellow;\n      display: inline;\n      &::before {\n        margin-right: 8px;\n      }\n    }\n\n  &-primary,\n  &-secondary {\n    color: $gray-6;\n  }\n\n  &-outline-light, &-light {\n    opacity: 1;\n    &, .icon {\n      color: $gray-4 !important;\n    }\n  }\n\n  &-shadow {\n    box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.25);\n  }\n}\n",
                    "styleUrl": "./icon-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 18
                    }
                }
            },
            "templateData": "<button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\" [disabled]=\"isDisabled\">\n    <li *ngIf=\"showIcon\" class=\"icon icon-pizza\"></li>\n    {{ label }}\n</button>"
        },
        {
            "name": "PizzaMenuCardComponent",
            "id": "component-PizzaMenuCardComponent-fa7169a6b266318f1758eae925700b5f",
            "file": "src/stories/pizza-menu-card/pizza-menu-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-pizza-menu-card",
            "styleUrls": [
                "./pizza-menu-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./pizza-menu-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColorGradientFrom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "bgColorGradientTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "cardBackgroundUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "numOfCalories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "numOfGrams",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number"
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sb-pizza-menu-card',\n  templateUrl: './pizza-menu-card.component.html',\n  styleUrls: ['./pizza-menu-card.component.scss'],\n})\nexport default class PizzaMenuCardComponent {\n  @Input() title: string;\n  @Input() numOfGrams: number;\n  @Input() numOfCalories: number;\n  @Input() description: string;\n  @Input() price: number;\n  @Input() cardBackgroundUrl: string;\n  @Input() bgColorGradientFrom: string;\n  @Input() bgColorGradientTo: string;\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  get background() {\n    return {\n      'background-image': `url(${this.cardBackgroundUrl}),\n                           radial-gradient(187.18% 90.09% at 50% 9.91%, ${this.bgColorGradientFrom} 0%, ${this.bgColorGradientTo} 100%)`,\n    };\n  }\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../assets/scss/colors';\n\n.pizza-card {\n  width: 308px;\n  height: 449px;\n  padding-left: 30px;\n  padding-right: 15px;\n  border-radius: 10px 100px 10px 10px;\n  background-repeat: no-repeat, repeat;\n  box-shadow: 0px 4px 16px 12px rgba(0, 0, 0, 0.14);\n\n  .content {\n    position: relative;\n    top: 50%;\n    height: 50%;\n\n    .calories {\n      margin-left: 36px;\n    }\n\n    .description {\n      color: $gray-1;\n      font-size: 16px;\n      line-height: 21px;\n      font-style: normal;\n      font-weight: normal;\n      font-family: 'Red Hat Display';\n    }\n\n    .pizza-card-footer {\n      bottom: 20px;\n      position: absolute;\n      width: -webkit-fill-available;\n\n      .price-container {\n        display: inline-grid;\n\n        .price-label {\n          margin: 0;\n          color: $gray-1;\n          font-size: 12px;\n          font-weight: 300;\n          line-height: 15px;\n          text-align: center;\n          font-style: normal;\n          font-family: Rowdies;\n        }\n\n        .price {\n          color: $gray-1;\n          font-size: 24px;\n          font-weight: bold;\n          line-height: 30px;\n          font-style: normal;\n          text-align: center;\n          font-family: Rowdies;\n        }\n      }\n\n      .add-btn {\n        right: 20px;\n        position: relative;\n      }\n    }\n  }\n}",
                    "styleUrl": "./pizza-menu-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "accessors": {
                "background": {
                    "name": "background",
                    "getSignature": {
                        "name": "background",
                        "type": "",
                        "returnType": "",
                        "line": 20
                    }
                }
            },
            "templateData": "<div class=\"pizza-card\" [ngStyle]=\"background\">\n  <div class=\"content\">\n    <h4 class=\"mb-1\">{{title}}</h4>\n    <div>\n      <caption class=\"d-inline txt-gray-6\">{{numOfGrams}}g</caption>\n      <caption class=\"d-inline txt-gray-6 calories\">{{numOfCalories}} cal</caption>\n    </div>\n    <p class=\"description pt-1 pb-1 m-0\">{{description}}</p>\n    <div class=\"row pizza-card-footer\">\n      <div class=\"price-container pr-3 pl-0 py-2 col-4\">\n        <label class=\"price-label\">starts at</label>\n        <span class=\"price\">{{price | currency : 'USD' : 'symbol' : '1.0-0'}}</span>\n      </div>\n      <div class=\"col-8 px-0\">\n        <sb-icon-button class=\"add-btn float-right\" label=\"ADD\" (click)=\"onClick.emit($event)\"></sb-icon-button>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "PromotionCardComponent",
            "id": "component-PromotionCardComponent-7b94d45da999ec6e96e61dad9425b7cb",
            "file": "src/stories/promotion-card/promotion-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-promotion-card",
            "styleUrls": [
                "./promotion-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./promotion-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bgColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "mainTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "secondTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "showDecorators",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'sb-promotion-card',\n  templateUrl: './promotion-card.component.html',\n  styleUrls: ['./promotion-card.component.scss']\n})\nexport default class PromotionCardComponent {\n  @Input() mainTitle: string;\n  @Input() secondTitle: string;\n  @Input() bgColor: string;\n  @Input() description: string;\n  @Input() showDecorators = false;\n\n  @Output() onClick = new EventEmitter<Event>();\n\n  constructor() { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../assets/scss/colors';\n\n.promotion-card {\n  width: 588px;\n  height: 369px;\n  padding: 18px;\n  position: relative;\n  text-align: center;\n  border-radius: 10px;\n  mix-blend-mode: normal;\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.16);\n\n  .main-title-content {\n    z-index: 10;\n\n    .decorator-left {\n      position: absolute;\n      left: 0px;\n      bottom: -10px;\n      z-index: -1;\n    }\n\n    .decorator-right {\n      position: absolute;\n      top: 0;\n      right: 20px;\n      z-index: -1;\n    }\n  }\n\n  .second-title {\n    margin-left: 75px;\n    margin-right: 75px;\n  }\n\n  .description {\n    color: $white;\n    font-size: 16px;\n    line-height: 21px;\n    text-align: center;\n    font-style: normal;\n    font-weight: normal;\n    font-family: 'Red Hat Display';\n  }\n\n  .promotion-footer {\n    bottom: 10px;\n    position: absolute;\n\n    .disclaimer {\n      font-size: 12px;\n      font-weight: 500;\n      line-height: 16px;\n      margin-left: 55px;\n      font-style: normal;\n      margin-right: 55px;\n      font-family: 'Red Hat Display';\n    }\n  }\n}",
                    "styleUrl": "./promotion-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "templateData": "<div class=\"promotion-card\" [ngStyle]=\"{'background-color': bgColor}\">\n  <div class=\"main-title-content position-relative\">\n    <img *ngIf=\"showDecorators\" class=\"decorator-left\" src=\"assets/images/leaf-left.png\">\n    <h2 class=\"main-title txt-red\">{{mainTitle}}</h2>\n    <img *ngIf=\"showDecorators\" class=\"decorator-right\" src=\"assets/images/leaf-right.png\">\n  </div>\n  <h3 class=\"second-title txt-yellow my-0\">{{secondTitle}}</h3>\n  <span *ngIf=\"description\" class=\"description\">{{description}}</span>\n  <div class=\"promotion-footer\">\n    <sb-icon-button [showIcon]=\"true\" label=\"ADD TO CART\" (click)=\"onClick.emit($event)\"></sb-icon-button>\n    <p class=\"disclaimer txt-white pt-3\">Promotion valid only for pickup and express purchases, not valid with other coupons. Promotion valid only on Fridays.</p>\n  </div>\n</div>"
        },
        {
            "name": "SearchInputComponent",
            "id": "component-SearchInputComponent-076c74f7c5fffb06e1c4dd80528b3bf5",
            "file": "src/stories/search-input/search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-search-input",
            "styleUrls": [
                "./search-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'search'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"search\" | \"address\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sb-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss']\n})\nexport default class SearchInputComponent {\n  @Input() type: 'search' | 'address' = 'search';\n\n  get iconClass() {\n    return (this.type === 'search') ? 'icon-search' : 'icon-pointer';\n  }\n  get placeholder() {\n    const searchType = (this.type === 'search') ? 'topping' : 'address';\n    return `Search for specific ${searchType}`;\n  }\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../assets/scss/colors';\n\n.input-icons {\n  .icon {\n    top: 5px;\n    left: 35px;\n    color: $gray-2;\n    font-size: 30px;\n    min-width: 39px;\n    position: relative;\n    -webkit-box-pack: center;\n    display: -webkit-inline-box;\n  }\n\n  .input-field {\n    color: $gray-2;\n    font-size: 20px;\n    line-height: 26px;\n    padding: 22px 25px;\n    text-align: center;\n    margin-left: -25px;\n    font-style: normal;\n    border-radius: 50px;\n    font-weight: normal;\n    padding-left: 84.5px;\n    width: calc(100% - 25px);\n    background-color: $gray-4;\n    font-family: 'Red Hat Display';\n  }\n}",
                    "styleUrl": "./search-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "accessors": {
                "iconClass": {
                    "name": "iconClass",
                    "getSignature": {
                        "name": "iconClass",
                        "type": "",
                        "returnType": "",
                        "line": 11
                    }
                },
                "placeholder": {
                    "name": "placeholder",
                    "getSignature": {
                        "name": "placeholder",
                        "type": "",
                        "returnType": "",
                        "line": 14
                    }
                }
            },
            "templateData": "<div class=\"input-icons\">\n  <i class=\"icon\" [ngClass]=\"iconClass\"></i>\n  <input\n    class=\"input-field\"\n    [placeholder]=\"placeholder\">\n</div>"
        },
        {
            "name": "TextInputComponent",
            "id": "component-TextInputComponent-a19afae65dbe0d3a0a2a80ec5a1d8979",
            "file": "src/stories/text-input/text-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sb-text-input",
            "styleUrls": [
                "./text-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean"
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": ""
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "\"text\" | \"password\" | \"email\""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_state",
                    "defaultValue": "'success'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "inputErrors$",
                    "defaultValue": "new Observable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "keyStreem$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkPassword",
                    "args": [
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ hasErrors: any; message: string; }",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "inputErrorsSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onKey",
                    "args": [
                        {
                            "name": "algo",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "algo",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\n\nconst EmailRegExp =\n/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst PasswordHasSpacesRegExp = /^(.*\\s+.*)+$/;\nconst PasswordLength = /^[\\p{Z}\\s]*(?:[^\\p{Z}\\s][\\p{Z}\\s]*){7,}$/;\nconst PasswordHasNumber = /\\d/;\nconst PasswordHasUppercase = /^(.*[A-Z]+.*)+$/;\nconst EmailErrorMessage = 'Please enter a valid email address.';\nconst IncludeSpacesErrorMessage = 'Can’t contain spaces.';\nconst HasIndicatedLengthErrorMessage = 'Must be at least 7 characters long.';\nconst IncludeNumbersErrorMessage = 'Must include a number.';\nconst IncludeUpperLetterMessage = 'Must include at least one upper lettter case.';\n\n@Component({\n  selector: 'sb-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n})\nexport default class TextInputComponent implements OnInit {\n  @Input() placeholder: string = '';\n  @Input() disabled: boolean = false;\n  @Input() type: 'text' | 'password' | 'email' = 'text';\n  @Input() set state(state: 'success' | 'danger') {\n    this._state = state || 'success';\n  }\n\n  public _state= 'success';\n  public keyStreem$: Subject<string> = new Subject();\n  public inputErrors$: Observable<any> = new Observable();\n\n  get classes() {\n    return [`type-${this.type}`, `state-${this._state}`];\n  }\n\n  get iconClass() {\n    let icon;\n    switch (this.type) {\n    case 'password':\n      icon = 'icon-lock';\n      break;\n    case 'email':\n      icon = 'icon-mail';\n      break;\n    default:\n      icon = '';\n      break;\n    }\n    return [icon];\n  }\n\n  public onKey(algo: KeyboardEvent): void {\n    this.keyStreem$.next((algo.target as HTMLInputElement).value);\n  }\n\n  private inputErrorsSubscription(): void {\n    this.inputErrors$ = this.keyStreem$.pipe(\n      debounceTime(500),\n      switchMap((text) => {\n        if (this.type === 'email') {\n          return of({\n            hasErrors: !EmailRegExp.test(String(text).toLowerCase()),\n            message: EmailErrorMessage,\n          });\n        } else if (this.type === 'password') {\n          return of(this.checkPassword(text));\n        }\n        return of({ hasErrors: false });\n      }),\n      tap(inputError => {\n        this._state = inputError.hasErrors ? 'danger' : 'success';\n      })\n    );\n  }\n\n  private checkPassword(password: string) {\n    const includeSpaces = PasswordHasSpacesRegExp.test(password);\n    const hasIndicatedLength = PasswordLength.test(password);\n    const includeNumbers = PasswordHasNumber.test(password);\n    const includeUpperLetter = PasswordHasUppercase.test(password);\n\n    return {\n      hasErrors:\n        includeSpaces ||\n        !hasIndicatedLength ||\n        !includeNumbers ||\n        !includeUpperLetter,\n      message: `Password ${includeSpaces ? IncludeSpacesErrorMessage : ''} \n                ${!hasIndicatedLength ? HasIndicatedLengthErrorMessage : ''}\n                ${!includeNumbers ? IncludeNumbersErrorMessage : ''}\n                ${!includeUpperLetter ? IncludeUpperLetterMessage : ''}\n                Password doesn’t match.`,\n    };\n  }\n\n  ngOnInit(): void {\n    this.inputErrorsSubscription();\n  }\n\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../assets/scss/colors';\n\n.input-icons {\n  .icon {\n    position: relative;\n    font-size: 30px;\n    left: 35px;\n    top: 5px;\n    color: $gray-4;\n    min-width:39px;\n    display: -webkit-inline-box;\n    -webkit-box-pack: center;\n  }\n  .input-field {\n    width: 100%;\n    padding: 22px 25px;\n    font-family: 'Red Hat Display';\n    font-style: normal;\n    font-weight: normal;\n    font-size: 20px;\n    line-height: 26px;\n    color: $gray-1;\n    background-color: $gray-6;\n    border-radius: 10px;\n    &.type-password, &.type-email {\n      padding-left: 84.5px;\n      margin-left: -25px;\n      width: calc(100% - 25px);\n    }\n\n    &.state{\n      &-danger {\n        border: 2px solid $red;\n      }\n      &-success {\n        border: 2px solid $green-2;\n      }\n    }\n  }\n}",
                    "styleUrl": "./text-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 100
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "state": {
                    "name": "state",
                    "setSignature": {
                        "name": "state",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "state",
                                "type": "\"success\" | \"danger\"",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "state",
                                "type": "\"success\" | \"danger\"",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "",
                        "returnType": "",
                        "line": 34
                    }
                },
                "iconClass": {
                    "name": "iconClass",
                    "getSignature": {
                        "name": "iconClass",
                        "type": "",
                        "returnType": "",
                        "line": 38
                    }
                }
            },
            "templateData": "<div class=\"input-icons\">\n  <i class=\"icon\" [ngClass]=\"iconClass\" *ngIf=\"type === 'email' || type === 'password'\"></i>\n  <input\n    class=\"input-field\" \n    [type]=\"type\" \n    [placeholder]=\"placeholder\" \n    [ngClass]=\"classes\" \n    (keyup)=\"onKey($event)\"\n    [disabled]=\"disabled\">\n  <ng-container *ngIf=\"(inputErrors$ | async) as inputErrors\">\n    <p *ngIf=\"inputErrors.hasErrors\" class=\"txt-red py-2 px-4\">{{inputErrors.message}}</p>\n  </ng-container>\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-b181016d57b5ec3474881c53983690bc",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { reducer } from './store/app.reducer';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { environment } from '../environments/environment';\n\n// Share\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    SharedModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot({app: reducer}),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-3c1d721cfd0753406a1cfde101c59380",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-ae1b6ad9fa9c31d6d1411080b947bed3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Stories\nimport Button from '../stories/button/button.component';\nimport IconButton from '../stories/icon-button/icon-button.component';\nimport Dropdown from '../stories/dropdown/dropdown.component';\nimport TextInput from '../stories/text-input/text-input.component';\nimport PizzaMenuCardComponent from '../stories/pizza-menu-card/pizza-menu-card.component';\n\nconst STORIES = [\n  Button,\n  Dropdown,\n  TextInput,\n  IconButton,\n  PizzaMenuCardComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [...STORIES],\n  exports: [...STORIES]\n})\nexport class SharedModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "Button"
                        },
                        {
                            "name": "Dropdown"
                        },
                        {
                            "name": "IconButton"
                        },
                        {
                            "name": "PizzaMenuCardComponent"
                        },
                        {
                            "name": "TextInput"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "Button"
                        },
                        {
                            "name": "Dropdown"
                        },
                        {
                            "name": "IconButton"
                        },
                        {
                            "name": "PizzaMenuCardComponent"
                        },
                        {
                            "name": "TextInput"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Address",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AddressAdd",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AddressEditDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AddressEditNotDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "appReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(AppActions.myAction, (state, {payload}) => ({\n    ...state,\n    myState: payload\n  }))\n)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CreditCardDeleteDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CreditCardDeleteNotDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CreditCardNew",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EggBasil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Email",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EmailErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Please enter a valid email address.'"
            },
            {
                "name": "EmailRegExp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "HasIndicatedLengthErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Must be at least 7 characters long.'"
            },
            {
                "name": "IncludeNumbersErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Must include a number.'"
            },
            {
                "name": "IncludeSpacesErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Can’t contain spaces.'"
            },
            {
                "name": "IncludeUpperLetterMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Must include at least one upper lettter case.'"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AppState",
                "defaultValue": "{\n  myState: ''\n}"
            },
            {
                "name": "italian",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "lives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "myAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  Types.MY_ACTION,\n  props<{ payload: string }>()\n)"
            },
            {
                "name": "Password",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PasswordHasNumber",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/\\d/"
            },
            {
                "name": "PasswordHasSpacesRegExp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/^(.*\\s+.*)+$/"
            },
            {
                "name": "PasswordHasUppercase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/^(.*[A-Z]+.*)+$/"
            },
            {
                "name": "PasswordLength",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "/^[\\p{Z}\\s]*(?:[^\\p{Z}\\s][\\p{Z}\\s]*){7,}$/"
            },
            {
                "name": "pepperoni",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/chip/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Promotion1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/promotion-card/promotion-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Promotion2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/promotion-card/promotion-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "salami",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "selectAppState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AppState>('app')"
            },
            {
                "name": "selectMyState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  selectAppState,\n  (state: AppState) => state.myState\n)"
            },
            {
                "name": "State_Danger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "State_Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "STORIES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  Button,\n  Dropdown,\n  TextInput,\n  IconButton,\n  PizzaMenuCardComponent\n]"
            },
            {
                "name": "supreme",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AddressCreditCard>",
                "defaultValue": "(args: AddressCreditCard) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/chip/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Chip>",
                "defaultValue": "(args: Chip) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Dropdown>",
                "defaultValue": "(args: Dropdown) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PizzaMenuCard>",
                "defaultValue": "(args: PizzaMenuCard) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/icon-button/icon-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<IconButton>",
                "defaultValue": "(args: IconButton) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/promotion-card/promotion-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PromotionCard>",
                "defaultValue": "(args: PromotionCard) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/search-input/search-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SearchInput>",
                "defaultValue": "(args: SearchInput) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TextInput>",
                "defaultValue": "(args: TextInput) => ({\n  props: args,\n})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "tomato",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "VeggieBasil",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "reducer",
                "file": "src/app/store/app.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "CardStates",
                "childs": [
                    {
                        "name": "NEW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NEW"
                    },
                    {
                        "name": "EDIT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "EDIT"
                    },
                    {
                        "name": "DELETE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DELETE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/address-credit-card/address-credit-card.component.ts"
            },
            {
                "name": "CardTypes",
                "childs": [
                    {
                        "name": "Address",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "address"
                    },
                    {
                        "name": "Credit",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "credit"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/address-credit-card/address-credit-card.component.ts"
            },
            {
                "name": "CreditCardBrand",
                "childs": [
                    {
                        "name": "MasterCard",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "MasterCard"
                    },
                    {
                        "name": "Visa",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Visa"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/stories/address-credit-card/address-credit-card.component.ts"
            },
            {
                "name": "Types",
                "childs": [
                    {
                        "name": "MY_ACTION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[core] my action"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/store/app.actions.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/search-input/search-input.stories.ts": [
                {
                    "name": "Address",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/search-input/search-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SearchInput>",
                    "defaultValue": "(args: SearchInput) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/address-credit-card/address-credit-card.stories.ts": [
                {
                    "name": "AddressAdd",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AddressEditDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AddressEditNotDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CreditCardDeleteDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CreditCardDeleteNotDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CreditCardNew",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/address-credit-card/address-credit-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AddressCreditCard>",
                    "defaultValue": "(args: AddressCreditCard) => ({\n  props: args,\n})"
                }
            ],
            "src/app/store/app.reducer.ts": [
                {
                    "name": "appReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(AppActions.myAction, (state, {payload}) => ({\n    ...state,\n    myState: payload\n  }))\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppState",
                    "defaultValue": "{\n  myState: ''\n}"
                },
                {
                    "name": "selectAppState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AppState>('app')"
                },
                {
                    "name": "selectMyState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  selectAppState,\n  (state: AppState) => state.myState\n)"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/text-input/text-input.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Email",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Password",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "State_Danger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "State_Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TextInput>",
                    "defaultValue": "(args: TextInput) => ({\n  props: args,\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/pizza-menu-card/pizza-menu-card.stories.ts": [
                {
                    "name": "EggBasil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "italian",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "lives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "pepperoni",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "salami",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "supreme",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PizzaMenuCard>",
                    "defaultValue": "(args: PizzaMenuCard) => ({\n  props: args,\n})"
                },
                {
                    "name": "tomato",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "VeggieBasil",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/text-input/text-input.component.ts": [
                {
                    "name": "EmailErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Please enter a valid email address.'"
                },
                {
                    "name": "EmailRegExp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/"
                },
                {
                    "name": "HasIndicatedLengthErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Must be at least 7 characters long.'"
                },
                {
                    "name": "IncludeNumbersErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Must include a number.'"
                },
                {
                    "name": "IncludeSpacesErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Can’t contain spaces.'"
                },
                {
                    "name": "IncludeUpperLetterMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Must include at least one upper lettter case.'"
                },
                {
                    "name": "PasswordHasNumber",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/\\d/"
                },
                {
                    "name": "PasswordHasSpacesRegExp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/^(.*\\s+.*)+$/"
                },
                {
                    "name": "PasswordHasUppercase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/^(.*[A-Z]+.*)+$/"
                },
                {
                    "name": "PasswordLength",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input/text-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "/^[\\p{Z}\\s]*(?:[^\\p{Z}\\s][\\p{Z}\\s]*){7,}$/"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/header/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/app/store/app.actions.ts": [
                {
                    "name": "myAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  Types.MY_ACTION,\n  props<{ payload: string }>()\n)"
                }
            ],
            "src/stories/button/button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/chip/chip.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/chip/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/chip/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Chip>",
                    "defaultValue": "(args: Chip) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/dropdown/dropdown.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Dropdown>",
                    "defaultValue": "(args: Dropdown) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/icon-button/icon-button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/icon-button/icon-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<IconButton>",
                    "defaultValue": "(args: IconButton) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/promotion-card/promotion-card.stories.ts": [
                {
                    "name": "Promotion1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/promotion-card/promotion-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Promotion2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/promotion-card/promotion-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/promotion-card/promotion-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PromotionCard>",
                    "defaultValue": "(args: PromotionCard) => ({\n  props: args,\n})"
                }
            ],
            "src/shared/shared.module.ts": [
                {
                    "name": "STORIES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  Button,\n  Dropdown,\n  TextInput,\n  IconButton,\n  PizzaMenuCardComponent\n]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/store/app.reducer.ts": [
                {
                    "name": "reducer",
                    "file": "src/app/store/app.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/stories/address-credit-card/address-credit-card.component.ts": [
                {
                    "name": "CardStates",
                    "childs": [
                        {
                            "name": "NEW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NEW"
                        },
                        {
                            "name": "EDIT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "EDIT"
                        },
                        {
                            "name": "DELETE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DELETE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/address-credit-card/address-credit-card.component.ts"
                },
                {
                    "name": "CardTypes",
                    "childs": [
                        {
                            "name": "Address",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "address"
                        },
                        {
                            "name": "Credit",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "credit"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/address-credit-card/address-credit-card.component.ts"
                },
                {
                    "name": "CreditCardBrand",
                    "childs": [
                        {
                            "name": "MasterCard",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "MasterCard"
                        },
                        {
                            "name": "Visa",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Visa"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/stories/address-credit-card/address-credit-card.component.ts"
                }
            ],
            "src/app/store/app.actions.ts": [
                {
                    "name": "Types",
                    "childs": [
                        {
                            "name": "MY_ACTION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[core] my action"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/store/app.actions.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "myAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectMyState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/shared/general.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownValue",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STORIES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/address-credit-card/address-credit-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddressCreditCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddressAdd",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddressEditDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddressEditNotDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreditCardDeleteDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreditCardDeleteNotDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CreditCardNew",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/address-credit-card/address-credit-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/chip/chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/chip/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/chip/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon-button/icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/icon-button/icon-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pizza-menu-card/pizza-menu-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PizzaMenuCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EggBasil",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "italian",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "lives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pepperoni",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "salami",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "supreme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tomato",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/pizza-menu-card/pizza-menu-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VeggieBasil",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/promotion-card/promotion-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PromotionCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/promotion-card/promotion-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Promotion1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/promotion-card/promotion-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Promotion2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/promotion-card/promotion-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-input/search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-input/search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Address",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-input/search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/search-input/search-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmailErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmailRegExp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HasIndicatedLengthErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IncludeNumbersErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IncludeSpacesErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IncludeUpperLetterMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordHasNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordHasSpacesRegExp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordHasUppercase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordLength",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Email",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Password",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "State_Danger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "State_Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}